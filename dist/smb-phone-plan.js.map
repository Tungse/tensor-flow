{"version":3,"sources":["webpack://smbPhonePlan/webpack/universalModuleDefinition","webpack://smbPhonePlan/webpack/bootstrap","webpack://smbPhonePlan/./src/js/store/deals.js","webpack://smbPhonePlan/./src/js/store/store.js","webpack://smbPhonePlan/./src/js/store/tariffs.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/helpers/support.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/helpers/offset.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/initialize.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/index.js","webpack://smbPhonePlan/./src/js/common/tracking.js","webpack://smbPhonePlan/./src/js/render/deals.js","webpack://smbPhonePlan/./src/js/render/result.js","webpack://smbPhonePlan/./src/js/common/validation.js","webpack://smbPhonePlan/./src/js/render/processing.js","webpack://smbPhonePlan/./src/js/index.js","webpack://smbPhonePlan/./src/js/render/stage.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","priceDiffence","deals","setDeal","category","tarif","index","getDealIndexByCategory","deal","product","company","provider","productInfoUrl","title","getTitleByDealCategory","link","concat","price","parseFloat","toFixed","push","setPriceDiffence","userPrice","tarifPrice","getProviderMapping","sortDeals","sort","a","b","getTarifPriceCategory","getTarifConditionCategory","user","worseLte","lte","worseVolume","volume","worseFlatrate","flatrate","JSON","stringify","store","defaultOptions","container","endpoint","set","action","assign","getResultCategory","length","getResultPercent","store_store","init","options","settings","tariffs","calculated","emailSended","resultCategory","resultPercent","logo","document","querySelector","setResult","formularData","currentVolume","lowestPrice","bestPrice","bestPriceByProvider","userCondition","tarifVolume","tarifProvider","tarifCondition","condition","getDeals","timerFinished","setTimerToResolvePromise","resolve","setTimeout","requestData","request","XMLHttpRequest","open","onreadystatechange","readyState","status","response","cleanData","parse","send","e","products","items","_typeof","forEach","mobileweb_lte","url_moreinfo","services_phone","cost_pm","replace","toLowerCase","mobileweb_volume","trim","getTariffs","Promise","reject","support","IntersectionObserverEntry","helpers_offset","offset","offsets","top","right","bottom","left","src_initialize","target","once","inViewCallback","outViewCallback","observer","boundingRect","isUpdating","isVisible","setOutView","err","console","error","setInView","entry","removeObserver","unobserve","removeEventListener","_scrollHandler","capture","passive","_scrollUpdate","topBorderOfElementIsInViewport","getBoundingClientRect","innerHeight","bottomBorderOfElementIsInViewport","requestAnimationFrame","config","rootMargin","IntersectionObserver","entries","isIntersecting","observe","addEventListener","src","formularInteractionTracked","eventLabel","location","href","eventCategory","checkButtonClick","smbt","emit","hitType","eventAction","metric85","listenToFormularInputChanged","formularItem","removeFormularInteractionListerner","trackFormularInputChanged","metric84","renderDeals","innerHTML","map","join","links","querySelectorAll","metric86","track","getContentByResult","content","categoryText","thumbIconClass","progressClass","setProgressBarTransition","progressWidth","progressBar","style","width","setThumbIconShake","thumbIcon","classList","add","listenToSendEmailClick","sendButton","emailForm","email","test","validateEmail","parentElement","renderResult","renderProcessing","facts","Math","floor","random","listenToCheckClick","checkButton","calculateUserTarif","listenToEnterClick","onkeydown","keyCode","formular","formularItems","dataset","required","remove","type","checked","validateFormularData","keys","contains","then","processing","listenToFormularInteraction","listenToFormularFocussed","nonInteraction","metric82","Observer","metric83"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oGCjFIC,EADAC,EAAQ,GAyFNC,EAAU,SAACC,EAAUC,GACzB,IAAMC,EAAQC,EAAuBH,GAC/BI,EAAO,CACXJ,SAAUA,EACVK,QAASJ,EAAMI,QACfC,QAASL,EAAMK,QACfC,SAAUN,EAAMM,SAChBC,eAAgBP,EAAMO,eACtBC,MAAOC,EAAuBV,GAC9BW,KAAI,GAAAC,OAAKX,EAAMU,KAAX,uBACJE,MAAOC,WAAWb,EAAMY,OAAOE,QAAQ,IAGrCb,GAAS,EACXJ,EAAMI,GAASE,EAEfN,EAAMkB,KAAKZ,IASTM,EAAyB,SAACV,GAC9B,IAAIS,EAAQ,gCAUZ,MARiB,YAAbT,IACFS,EAAQ,0BAGO,gBAAbT,IACFS,EAAQ,wCAGHA,GAeHN,EAAyB,SAACH,GAC9B,IAAK,IAAIE,KAASJ,EAChB,GAAIA,EAAMI,GAAOF,WAAaA,EAC5B,OAAOE,EAIX,OAAQ,GAQJe,EAAmB,SAACC,EAAWC,GACnCtB,EAAgBiB,WAAWI,EAAYC,GAAYJ,QAAQ,IAQvDK,EAAqB,SAACb,GAC1B,MAAiB,OAAbA,EACK,aAGFA,GAQHc,EAAY,SAACvB,GACjB,OAAOA,EAAMwB,KAAK,SAACC,EAAGC,GACpB,OAAQD,EAAEvB,SAAWwB,EAAExB,UAAY,EAAKuB,EAAEvB,SAAWwB,EAAExB,SAAW,EAAI,KAUpEyB,EAAwB,SAACN,EAAYN,GACzC,OAAIM,EAAaN,EAAQC,WAAW,OAC3B,QAGLK,EAAaN,EAAQC,WAAW,OAC3B,SAGF,QASHY,EAA4B,SAACC,EAAM1B,GACvC,IAAM2B,EAAWD,EAAKE,MAAQ5B,EAAM4B,IAC9BC,EAAc7B,EAAM8B,OAASJ,EAAKI,OAClCC,EAAgBL,EAAKM,WAAahC,EAAMgC,SAE9C,OAAIH,GAAeF,GAAYI,EACtB,QAGLE,KAAKC,UAAUR,KAAUO,KAAKC,UAAUlC,GACnC,OAGF,UC1NLmC,EAAQ,GAENC,EAAiB,CACrBC,UAAW,kBACXC,SAAU,2GAmCNC,EAAM,SAACC,GACXL,EAAQ7D,OAAOmE,OAAO,GAAIN,EAAOK,IA0B7BE,EAAoB,SAAC7C,GACzB,OAAIA,EAAM8C,OAAS,EACV,EAGF,GAQHC,EAAmB,SAAC/C,GACxB,OAAqB,IAAjBA,EAAM8C,OACD,GAEY,IAAjB9C,EAAM8C,OACD,GAEY,IAAjB9C,EAAM8C,OACD,GAGF,IAGME,EAAA,CACbpE,IA/DU,WACV,OAAO0D,GA+DPI,MACAO,KArFW,SAACC,GACZ,IAAMC,EAAW1E,OAAOmE,OAAO,GAAIL,EAAgBW,GAEnDR,EAAI,CACF1C,MAAO,GACPoD,QAAS,GACTC,YAAY,EACZC,aAAa,EACbC,eAAgB,EAChBC,cAAe,EACfzD,cAAe,IACf0D,KAAMN,EAASM,KACfhB,SAAUU,EAASV,SACnBD,UAAWkB,SAASC,cAAcR,EAASX,cAyE7CoB,UAlDgB,SAACC,GDmFjB7D,EAAQ,GChFR,IAAMA,EDnCgB,SAACoD,EAASS,GAYhC,IAXA,IAAMzC,EAAYJ,WAAW6C,EAAa9C,OACtC+C,EAAgB9C,WAAW6C,EAAa5B,QACxC8B,EAAc3C,EACd4C,EAAY5C,EACZ6C,EAAsB7C,EACpB8C,EAAgB,CACpBnC,IAAK8B,EAAa9B,IAClBI,SAAU0B,EAAa1B,SACvBF,OAAQ6B,GAGD/F,EAAI,EAAGA,EAAIqF,EAAQN,OAAQ/E,IAAK,CACvC,IAAMoC,EAAQiD,EAAQrF,GAChBsD,EAAaL,WAAWb,EAAMY,OAC9BoD,EAAcnD,WAAWb,EAAM8B,QAC/BmC,EAAgB9C,EAAmBnB,EAAMM,UACzC4D,EAAiB,CACrBtC,IAAK5B,EAAM4B,IACXI,SAAUhC,EAAMgC,SAChBF,OAAQkC,GAEJG,EAAY1C,EAA0BsC,EAAeG,GAGzDD,IAAkBP,EAAapD,UAChB,SAAd6D,GAAsC,WAAdA,GACkC,WAA3D3C,EAAsBN,EAAY4C,GAUlCG,IAAkBP,EAAapD,UAChB,SAAd6D,GAAsC,WAAdA,GACwB,WAAjD3C,EAAsBN,EAAY2C,GAUpB,WAAdM,GACiD,SAAjD3C,EAAsBN,EAAYD,IAClC+C,GAAeL,IAGf7D,EAAQ,cAAeE,GACvB2D,EAAgBK,EAChBJ,EAAcA,EAAc1C,EAAaA,EAAa0C,IAdtD9D,EAAQ,UAAWE,GACnB6D,EAAY3C,EACZ0C,EAAcA,EAAc1C,EAAaA,EAAa0C,IAdtD9D,EAAQ,aAAcE,GACtB8D,EAAsB5C,EACtB0C,EAAcA,EAAc1C,EAAaA,EAAa0C,GAgC1D,MAJsD,WAAlDpC,EAAsBoC,EAAa3C,IACrCD,EAAiBC,EAAW2C,GAGvBxC,EAAUvB,GC7BHuE,CAASjC,EAAMc,QAASS,GAEtCnB,EAAI,CACF1C,MAAOA,EACPqD,YAAY,EACZtD,cDjDKA,ECkDLwD,eAAgBV,EAAkB7C,GAClCwD,cAAeT,EAAiB/C,4OCzDpC,IAAIwE,GAAgB,EAqBdC,EAA2B,SAACC,GAChCC,WAAW,WACTH,GAAgB,EAEZlC,EAAM1D,MAAMwE,QAAQN,OAAS,GAC/B4B,KAED,MAMCE,EAAc,SAACF,GACnB,IACE,IAAMG,EAAU,IAAIC,eAEpBD,EAAQE,KAAK,MAAOzC,EAAM1D,MAAM6D,UAAU,GAC1CoC,EAAQG,mBAAqB,WACA,IAAvBH,EAAQI,YAAuC,MAAnBJ,EAAQK,QAAkBL,EAAQM,WAChE7C,EAAMI,IAAI,CAAEU,QAASgC,EAAUhD,KAAKiD,MAAMR,EAAQM,aAE9CX,GACFE,MAING,EAAQS,OACR,MAAOC,MAQLH,EAAY,SAACI,GACjB,IAAIC,EAAQ,GAkBZ,OAhBID,GAAgC,WAApBE,EAAOF,IACrBA,EAASG,QAAQ,SAACpF,GAChBkF,EAAMvE,KAAK,CACTL,KAAMN,EAAQM,KACdN,QAASA,EAAQA,QACjBC,QAASD,EAAQC,QACjBuB,IAA+B,OAA1BxB,EAAQqF,gBAA0B,EACvClF,eAAgBH,EAAQsF,aACxB1D,SAAqC,SAA3B5B,EAAQuF,iBAA6B,EAC/C/E,MAAOR,EAAQwF,QAAQC,QAAQ,IAAK,KACpCvF,SAAUF,EAAQE,SAASwF,cAC3BhE,OAAQ1B,EAAQ2F,iBAAiBF,QAAQ,KAAM,IAAIG,WAKlDV,GAGMW,EAzEI,WACjB,OAAO,IAAIC,QAAQ,SAAU3B,EAAS4B,GAChChE,EAAM1D,MAAMyE,WACdqB,KAGFE,EAAYF,GACZD,EAAyBC,OCTd,IAAA6B,EANf,WACA,+BAAA5I,QACA,8BAAAA,QACA,sBAAAA,OAAA6I,0BAAA7G,WCkBe,IAAA8G,EArBf,SAAAC,GACA,IAAAC,EAAA,CACAC,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAEA,OAAAL,GAGA,iBAAAA,GACAC,EAAAC,IAAAF,EAAAE,KAAA,EACAD,EAAAE,MAAAH,EAAAG,OAAA,EACAF,EAAAG,OAAAJ,EAAAI,QAAA,EACAH,EAAAI,KAAAL,EAAAK,MAAA,GAEAJ,EAAAG,OAAAJ,EAEAC,GAVAA,GCiFe,IAAAK,EAtFf,SAAAC,EAAAC,EAAAC,EAAAT,EAAAU,GACA,IAAAD,IAAAC,EACA,OAEA,IAAAC,EACAC,EACAC,GAAA,EACAC,GAAA,EACA,MAAAb,EAAkBF,EAAUC,GAE5Be,EAAA,WACA,GAAAL,GAAAI,EACA,IACAJ,IACO,MAAAM,GACPC,QAAAC,MAAAF,GAGAF,GAAA,GAGAK,EAAA,SAAAC,GACA,GAAAX,IAAAK,EAAA,CACA,IACAL,IACO,MAAAO,GACPC,QAAAC,MAAAF,GAEAR,GACAa,EAAAD,GAGAN,GAAA,GAGAO,EAAA,SAAAD,GACQvB,IACRc,EAAAW,UAAAF,EAAAb,QAEAtJ,OAAAsK,oBAAA,SAAAC,EAAA,CAA4DC,SAAA,EAAAC,SAAA,KAI5DC,EAAA,WAEA,IAAAC,GADAhB,EAAAL,EAAAsB,yBACA3B,KAAAjJ,OAAA6K,YAAA7B,EAAAG,OACA2B,EAAAnB,EAAAR,OAAAH,EAAAG,QAAA,EACAwB,GAAAG,EACAZ,IAEAJ,IAEAF,GAAA,GAGAW,EAAA,WACA,GAAAX,EACA,SAEA5J,OAAA+K,uBACA/K,OAAA+K,sBAAAL,GACAd,GAAA,GAEAc,KAIA,GAAM9B,IAAmB,CACzB,MAAAoC,EAAA,CACAC,WAAAjC,EAAAC,IAAA,MAAAD,EAAAE,MAAA,MAAAF,EAAAG,OAAA,MAAAH,EAAAI,KAAA,OAEAM,EAAA,IAAAwB,qBAAA,SAAAC,GACAA,EAAAnD,QAAA,SAAAmC,GACAA,EAAAiB,eACAlB,EAAAC,GAEAL,OAGKkB,IACLK,QAAA/B,QAEAtJ,OAAAsL,iBAAA,SAAAf,EAAA,CAAuDC,SAAA,EAAAC,SAAA,KCjExC,IAAAc,EARL,SAAAjC,EAAAE,EAAAT,EAAAU,GACRJ,EAAUC,GAAA,EAAAE,EAAAT,EAAAU,ICVR+B,GAA6B,EAC3BC,EAAazL,OAAO0L,SAASC,KAC7BC,EAAgB,6BA+CTC,EAAmB,WAC9B,QAA2B,IAAhB7L,OAAO8L,KAIlB,IACE9L,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAa,uBACbR,WAAYA,EACZS,SAAU,IAEZ,MAAOtE,MAMEuE,EAA+B,SAACC,QAChB,IAAhBpM,OAAO8L,MAIlBM,EAAad,iBAAiB,SAAU,WACtCe,EAAmCD,GACnCE,OAOEA,EAA4B,WAChC,IAAId,EAAJ,CAIA,IACExL,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAa,UACbR,WAAYA,EACZc,SAAU,IAEZ,MAAO3E,IAET4D,GAA6B,IAOzBa,EAAqC,SAArCA,EAAsCD,GAC1CA,EAAa9B,oBAAoB,SAAU,WACzC+B,EAAmCD,GACnCE,OCrEWE,EAnCK,WAClB,IAAM3H,EAAYF,EAAM1D,MAAM4D,UAAUmB,cAAc,sCAEpC,OAAdnB,IAI6B,IAA7BF,EAAM1D,MAAMoB,MAAM8C,OACpBN,EAAU4H,UAAV,IAEA5H,EAAU4H,UAAV,sEAAAtJ,OAEMwB,EAAM1D,MAAMoB,MAAMqK,IAAI,SAAC/J,EAAMF,GAAP,MAAiB,uKAAAU,OAGKR,EAAKK,MAHV,yBAAAG,OAIjCR,EAAKI,eAAL,0BAAAI,OACOR,EAAKE,QAAL,GAAAM,OAAkBR,EAAKE,QAAvB,SADP,aAAAM,OAC0DR,EAAKI,eAD/D,sBAAAI,OACkGR,EAAKC,QADvG,wDAAAO,OAGOR,EAAKE,QAAL,GAAAM,OAAkBR,EAAKE,QAAvB,UAHPM,OAGiDR,EAAKC,QAHtD,0BAJiC,+HAAAO,OAWkBR,EAAKS,MAXvB,gHAAAD,OAYoDR,EAAKO,KAZzD,oFAevCsF,SAAQmE,KAAK,IAjBnB,uBDqGsC,WACxC,QAA2B,IAAhB3M,OAAO8L,KAAlB,CAIA,IAAMc,EAAQjI,EAAM1D,MAAM4D,UAAUgI,iBAAiB,+CAChC,IAAjBD,EAAMzH,QAIVyH,EAAM5E,QAAQ,SAAC9E,EAAMT,GACnBS,EAAKoI,iBAAiB,QAAS,WAC7B,IACEtL,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAW,gBAAA9I,OAAkBV,EAAQ,EAA1B,YACXgJ,WAAYA,EACZqB,SAAU,IAEZ,MAAOlF,UCpGXmF,MCeEC,EAAqB,WACzB,IAAIC,EAAU,CACZC,aAAc,WACdC,eAAgB,mBAChBC,cAAe,yBASjB,OANmC,IAA/BzI,EAAM1D,MAAM2E,iBACdqH,EAAQC,aAAe,MACvBD,EAAQE,eAAiB,iBACzBF,EAAQG,cAAgB,0BAGnBH,GAOHI,EAA2B,SAACC,GAChC,IAAMC,EAAc5I,EAAM1D,MAAM4D,UAAUmB,cAAc,6CAEpC,OAAhBuH,GAIJvG,WAAW,WACTuG,EAAYC,MAAMC,MAAlB,GAAAtK,OAA6BmK,EAA7B,MACC,MAMCI,EAAoB,WACxB,IAAMC,EAAYhJ,EAAM1D,MAAM4D,UAAUmB,cAAc,2CAEpC,OAAd2H,GAIJ3G,WAAW,WACT2G,EAAUC,UAAUC,IAAI,UACvB,MAMCC,EAAyB,WAC7B,IAAMC,EAAapJ,EAAM1D,MAAM4D,UAAUmB,cAAc,2CAEpC,OAAf+H,GAIJA,EAAWzC,iBAAiB,QAAS,WACnC,IAAM0C,EAAYrJ,EAAM1D,MAAM4D,UAAUmB,cAAc,sCAChDiI,EAAQtJ,EAAM1D,MAAM4D,UAAUmB,cAAc,4CAEhC,OAAdgI,GAAgC,OAAVC,KAIS,IC3EV,SAACA,GAE5B,MADc,eACDC,KAAKD,GDyEZE,CAAcF,EAAM5M,QAKxB2M,EAAUvB,UAAV,oMACA9H,EAAMI,IAAI,CAAEY,aAAa,IFyCJ,WACvB,QAA2B,IAAhB3F,OAAO8L,KAIlB,IACE9L,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAa,qBACbR,WAAYA,IAEd,MAAO7D,KEpDPmF,IANEkB,EAAMG,cAAcR,UAAUC,IAAI,iBAUzBQ,EAzHM,WACnB,IAAMpB,EAAUD,IACVnI,EAAYF,EAAM1D,MAAM4D,UAAUmB,cAAc,uCAElDnB,IACFA,EAAU4H,UAAV,uJAAAtJ,OAI8C8J,EAAQG,cAJtD,kGAAAjK,OAK0C8J,EAAQE,eALlD,sEAAAhK,OAOmC,IAA/BwB,EAAM1D,MAAM2E,eAAZ,uCAAAzC,OAC4B8J,EAAQC,aADpC,MAAA/J,OACqDwB,EAAM1D,MAAMmB,cAAZ,aAAAe,OAAyCwB,EAAM1D,MAAMmB,cAAciG,QAAQ,IAAK,KAAhF,0BADrD,wLAAAlF,QAK8B,IAA5BwB,EAAM1D,MAAM0E,YAAZ,4mBALF,YAPJ,UA6BA0H,EAAyB1I,EAAM1D,MAAM4E,eACrC6H,IACAI,IFuGkB,SAACZ,GACrB,QAA2B,IAAhBlN,OAAO8L,KAIlB,IACE9L,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAW,oBAAA9I,OAAsB+J,GACjCzB,WAAYA,IAEd,MAAO7D,KElHPmF,CAAaE,EAAQC,gBEzBZoB,EAAmB,WAC9B,IAbMC,EAaA1J,EAAYF,EAAM1D,MAAM4D,UAAUmB,cAAc,2CAElDnB,IACFA,EAAU4H,UAAV,mVAAAtJ,QAhBIoL,EAAQ,CACZ,oEACA,mHACA,mGAGWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMpJ,SAU5C,0ECLJ,IAkBMwJ,EAAqB,WACzB,IAAMC,EAAcjK,EAAM1D,MAAM4D,UAAUmB,cAAc,sCAEpC,OAAhB4I,GAIJA,EAAYtD,iBAAiB,QAAS,WACpCyB,IACA8B,OAOEC,EAAqB,WACzB/I,SAASgJ,UAAY,SAACnH,GACF,KAAdA,EAAEoH,UACJjC,IACA8B,OAQAA,EAAqB,WACzB,ICoBMI,EDpBA/I,EF3D4B,WAKlC,IAJA,IAAI+D,GAAQ,EACR/D,EAAe,GACbgJ,EAAgBvK,EAAM1D,MAAM4D,UAAUgI,iBAAiB,8CAEpDzM,EAAI,EAAGA,EAAI8O,EAAc/J,OAAQ/E,IAAK,CAC7C,IAAMgM,EAAe8C,EAAc9O,GAC7BO,EAAOyL,EAAa+C,QAAQxO,KACjByL,EAAa+C,QAAQC,UAEC,KAAvBhD,EAAa/K,OAC3B4I,GAAQ,EACRmC,EAAagC,cAAcR,UAAUC,IAAI,cAEzCzB,EAAagC,cAAcR,UAAUyB,OAAO,aAGpB,aAAtBjD,EAAakD,KACfpJ,EAAavF,GAAQyL,EAAamD,QAElCrJ,EAAavF,GAAQyL,EAAa/K,MAItC,OAAI4I,EACK,GAGF/D,EE+BcsJ,GAEoB,IAArC1O,OAAO2O,KAAKvJ,GAAcf,SAI9BmJ,ICgBiB,QAFXW,EAAWtK,EAAM1D,MAAM4D,UAAUmB,cAAc,2CAE5BiJ,EAASrB,UAAU8B,SAAS,SAIrDT,EAASrB,UAAUC,IAAI,QDlBvBpF,IAAakH,KAAK,WAChBhL,EAAMsB,UAAUC,KACfyJ,KAAK,WDnCsB,IACxBC,KAAajL,EAAM1D,MAAM4D,UAAUmB,cAAc,6CAGrD4J,EAAWP,SCiCXhB,IACA7B,QAOSqD,EAA8B,WAGzC,IAFA,IAAMX,EAAgBvK,EAAM1D,MAAM4D,UAAUgI,iBAAiB,8CAEpDzM,EAAI,EAAGA,EAAI8O,EAAc/J,OAAQ/E,IAAK,CAC7C,IAAMgM,EAAe8C,EAAc9O,GAEnC0P,EAAyB1D,GACzBW,EAAmCX,KAQjC0D,EAA2B,SAAC1D,GAChCA,EAAad,iBAAiB,QAAS,WC9BX,IACtB2D,EAEW,QAFXA,EAAWtK,EAAM1D,MAAM4D,UAAUmB,cAAc,4CAEY,IAAxCiJ,EAASrB,UAAU8B,SAAS,SAIrDT,EAASrB,UAAUyB,OAAO,WD4Bb/J,UAxFF,SAACC,GACZZ,EAAMW,KAAKC,GAEmB,OAA1BZ,EAAM1D,MAAM4D,YCfhBF,EAAM1D,MAAM4D,UAAU4H,UAAtB,kLAAAtJ,OAIQwB,EAAM1D,MAAM6E,KAAZ,qDAAA3C,OACwCwB,EAAM1D,MAAM6E,KADpD,0BAJR,yqFDoBA6I,IACAG,IACAe,ILlBmB,WACnB,QAA2B,IAAhB7P,OAAO8L,KAIlB,IACE9L,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAa,QACbR,WAAYA,EACZsE,gBAAgB,EAChBC,SAAU,IAEZ,MAAOpI,KKKTmF,QLE2B,IAAhB/M,OAAO8L,MAIlBmE,EAActL,EAAM1D,MAAM4D,UAAW,WACnC,IACE7E,OAAO8L,KAAKC,KAAK,eAAgB,CAC/BC,QAAS,QACTJ,cAAeA,EACfK,YAAa,UACbR,WAAYA,EACZsE,gBAAgB,EAChBG,SAAU,IAEZ,MAAOtI","file":"smb-phone-plan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smbPhonePlan\"] = factory();\n\telse\n\t\troot[\"smbPhonePlan\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","let deals = []\nlet priceDiffence\n\n/**\n * return the difference of user input price and the lowest price from XML data\n * @returns {*}\n */\nexport const getPriceDiffence = () => {\n  return priceDiffence\n}\n\n/**\n * return matching deals by calculating user inputs\n * @param tariffs\n * @param formularData\n * @returns {*}\n */\nexport const getDeals = (tariffs, formularData) => {\n  const userPrice = parseFloat(formularData.price)\n  let currentVolume = parseFloat(formularData.volume)\n  let lowestPrice = userPrice\n  let bestPrice = userPrice\n  let bestPriceByProvider = userPrice\n  const userCondition = {\n    lte: formularData.lte,\n    flatrate: formularData.flatrate,\n    volume: currentVolume,\n  }\n\n  for (let i = 0; i < tariffs.length; i++) {\n    const tarif = tariffs[i]\n    const tarifPrice = parseFloat(tarif.price)\n    const tarifVolume = parseFloat(tarif.volume)\n    const tarifProvider = getProviderMapping(tarif.provider)\n    const tarifCondition = {\n      lte: tarif.lte,\n      flatrate: tarif.flatrate,\n      volume: tarifVolume,\n    }\n    const condition = getTarifConditionCategory(userCondition, tarifCondition)\n\n    const sameProviderBetterPrice =\n      tarifProvider === formularData.provider &&\n      (condition === 'same' || condition === 'better') &&\n      getTarifPriceCategory(tarifPrice, bestPriceByProvider) === 'better'\n\n    if (sameProviderBetterPrice) {\n      setDeal('1:provider', tarif)\n      bestPriceByProvider = tarifPrice\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n      continue\n    }\n\n    const differentProviderBetterPrice =\n      tarifProvider !== formularData.provider &&\n      (condition === 'same' || condition === 'better') &&\n      getTarifPriceCategory(tarifPrice, bestPrice) === 'better'\n\n    if (differentProviderBetterPrice) {\n      setDeal('2:price', tarif)\n      bestPrice = tarifPrice\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n      continue\n    }\n\n    const betterConditionSamePrice =\n      condition === 'better' &&\n      getTarifPriceCategory(tarifPrice, userPrice) === 'same' &&\n      tarifVolume >= currentVolume\n\n    if (betterConditionSamePrice) {\n      setDeal('3:condition', tarif)\n      currentVolume = tarifVolume\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n    }\n  }\n\n  if (getTarifPriceCategory(lowestPrice, userPrice) === 'better') {\n    setPriceDiffence(userPrice, lowestPrice)\n  }\n\n  return sortDeals(deals)\n}\n\n/**\n * add/update matching deals\n * @param category\n * @param tarif\n */\nconst setDeal = (category, tarif) => {\n  const index = getDealIndexByCategory(category)\n  const deal = {\n    category: category,\n    product: tarif.product,\n    company: tarif.company,\n    provider: tarif.provider,\n    productInfoUrl: tarif.productInfoUrl,\n    title: getTitleByDealCategory(category),\n    link: `${tarif.link}&subid=tarifchecker`,\n    price: parseFloat(tarif.price).toFixed(2),\n  }\n\n  if (index > -1) {\n    deals[index] = deal\n  } else {\n    deals.push(deal)\n  }\n}\n\n/**\n * return title of the deal\n * @param category\n * @returns string\n */\nconst getTitleByDealCategory = (category) => {\n  let title = 'Bester Preis im gleichen Netz'\n\n  if (category === '2:price') {\n    title = 'Günstigste Alternative'\n  }\n\n  if (category === '3:condition') {\n    title = 'Bessere Konditionen zum selben Preis'\n  }\n\n  return title\n}\n\n/**\n * reset deals before each result calculation\n */\nexport const resetDeals = () => {\n  deals = []\n}\n\n/**\n * check if deal is already in deals\n * @param category\n * @returns {string|number}\n */\nconst getDealIndexByCategory = (category) => {\n  for (let index in deals) {\n    if (deals[index].category === category) {\n      return index\n    }\n  }\n\n  return -1\n}\n\n/**\n * calculate difference of user input price and price from XML data\n * @param userPrice\n * @param tarifPrice\n */\nconst setPriceDiffence = (userPrice, tarifPrice) => {\n  priceDiffence = parseFloat(userPrice - tarifPrice).toFixed(2)\n}\n\n/**\n * mapping for o2/telefónica\n * @param provider\n * @returns {string|*}\n */\nconst getProviderMapping = (provider) => {\n  if (provider === 'o2') {\n    return 'telefónica'\n  }\n\n  return provider\n}\n\n/**\n * sort deals by category\n * @param deals\n * @returns {*}\n */\nconst sortDeals = (deals) => {\n  return deals.sort((a, b) => {\n    return (a.category < b.category ? -1 : (a.category > b.category ? 1 : 0))\n  })\n}\n\n/**\n * calculate if tarif's price is better then the current price, with a tolerance limit\n * @param tarifPrice\n * @param price\n * @returns {string}\n */\nconst getTarifPriceCategory = (tarifPrice, price) => {\n  if (tarifPrice > price + parseFloat('0.1')) {\n    return 'worse'\n  }\n\n  if (tarifPrice < price - parseFloat('0.1')) {\n    return 'better'\n  }\n\n  return 'same'\n}\n\n/**\n * calculate if tarif's condition is better then user's condition\n * @param user\n * @param tarif\n * @returns {string}\n */\nconst getTarifConditionCategory = (user, tarif) => {\n  const worseLte = user.lte && !tarif.lte\n  const worseVolume = tarif.volume < user.volume\n  const worseFlatrate = user.flatrate && !tarif.flatrate\n\n  if (worseVolume || worseLte || worseFlatrate) {\n    return 'worse'\n  }\n\n  if (JSON.stringify(user) === JSON.stringify(tarif)) {\n    return 'same'\n  }\n\n  return 'better'\n}\n","import { getDeals, resetDeals, getPriceDiffence } from '../store/deals.js'\n\nlet store = {}\n\nconst defaultOptions = {\n  container: '#smb-phone-plan',\n  endpoint: 'https://tools.communicationads.net/webservice.php?wf=10506&format=json&calc=handytarif&country=DE&c=200',\n}\n\n/**\n * init store with default options\n * @param options\n */\nconst init = (options) => {\n  const settings = Object.assign({}, defaultOptions, options)\n\n  set({\n    deals: [],\n    tariffs: [],\n    calculated: false,\n    emailSended: false,\n    resultCategory: 0, // 0 = bad, 1 = good\n    resultPercent: 0, // width of progress-bar\n    priceDiffence: '0', // how much more € user is paying\n    logo: settings.logo,\n    endpoint: settings.endpoint,\n    container: document.querySelector(settings.container),\n  })\n}\n\n/**\n * return store object\n */\nconst get = () => {\n  return store\n}\n\n/**\n * set store\n * @param action\n */\nconst set = (action) => {\n  store = Object.assign({}, store, action)\n}\n\n/**\n * calculate user result and get matching deals\n * @param formularData\n */\nconst setResult = (formularData) => {\n  resetDeals()\n\n  const deals = getDeals(store.tariffs, formularData)\n\n  set({\n    deals: deals,\n    calculated: true,\n    priceDiffence: getPriceDiffence(),\n    resultCategory: getResultCategory(deals),\n    resultPercent: getResultPercent(deals),\n  })\n}\n\n/**\n * calculate user result category by the amount of matching deals\n * @param deals\n * @returns {number}\n */\nconst getResultCategory = (deals) => {\n  if (deals.length > 0) {\n    return 0\n  }\n\n  return 1\n}\n\n/**\n * calculate user progress bar percent by the amount of matching deals\n * @param deals\n * @returns {number}\n */\nconst getResultPercent = (deals) => {\n  if (deals.length === 0) {\n    return 90\n  }\n  if (deals.length === 1) {\n    return 80\n  }\n  if (deals.length === 2) {\n    return 60\n  }\n\n  return 40\n}\n\nexport default {\n  get,\n  set,\n  init,\n  setResult,\n}\n","import store from './store.js'\n\nlet timerFinished = false\n\n/**\n * request data from API and resolve promise at the earliest after 3s\n * @returns {Promise}\n */\nconst getTariffs = () => {\n  return new Promise(function (resolve, reject) {\n    if (store.get().calculated) {\n      resolve()\n      return\n    }\n    requestData(resolve)\n    setTimerToResolvePromise(resolve)\n  })\n}\n\n/**\n * resolve promise after 3s if data are requested, else set timerFinished\n * @param resolve\n */\nconst setTimerToResolvePromise = (resolve) => {\n  setTimeout(() => {\n    timerFinished = true\n\n    if (store.get().tariffs.length > 0) {\n      resolve()\n    }\n  }, 3000)\n}\n\n/**\n * request and save data to store, then resolve promise if timer is finished\n */\nconst requestData = (resolve) => {\n  try {\n    const request = new XMLHttpRequest()\n\n    request.open('GET', store.get().endpoint, true)\n    request.onreadystatechange = () => {\n      if (request.readyState === 4 && request.status === 200 && request.response) {\n        store.set({ tariffs: cleanData(JSON.parse(request.response)) })\n\n        if (timerFinished) {\n          resolve()\n        }\n      }\n    }\n    request.send()\n  } catch (e) {}\n}\n\n/**\n * filter only needed keys from requested data\n * @param products\n * @returns {[]}\n */\nconst cleanData = (products) => {\n  let items = []\n\n  if (products && typeof products === 'object') {\n    products.forEach((product) => {\n      items.push({\n        link: product.link, // string like 'http://www.commicationads.net/...'\n        product: product.product, // string like 'LTE Internet XL'\n        company: product.company, // string like 'PremiumSIM'\n        lte: product.mobileweb_lte === 'Ja' || false, // string like 'Ja'\n        productInfoUrl: product.url_moreinfo, // string like 'https://www.premiumsim.de/pdf/5158/produktioninformationsblatt'\n        flatrate: product.services_phone === 'Flat' || false, // string like 'Flat'\n        price: product.cost_pm.replace(',', '.'), // string like '21,99'\n        provider: product.provider.toLowerCase(), // string like 'Telefónica'\n        volume: product.mobileweb_volume.replace('GB', '').trim(), // string like '8 GB'\n      })\n    })\n  }\n\n  return items\n}\n\nexport default getTariffs\n","const observerIsSupported = function () {\n  return 'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n}\n\nexport default observerIsSupported\n","const getOffsets = function (offset) {\n  let offsets = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  }\n  if (!offset) {\n    return offsets\n  }\n  if (typeof offset === 'object') {\n    offsets.top = offset.top || 0\n    offsets.right = offset.right || 0\n    offsets.bottom = offset.bottom || 0\n    offsets.left = offset.left || 0\n  } else {\n    offsets.bottom = offset\n  }\n  return offsets\n}\n\nexport default getOffsets\n","import observerIsSupported from './helpers/support'\nimport getOffsets from './helpers/offset'\n\nconst initialize = function (target, once, inViewCallback, offset, outViewCallback) {\n  if (!inViewCallback && !outViewCallback) {\n    return\n  }\n  let observer\n  let boundingRect\n  let isUpdating = false\n  let isVisible = false\n  const offsets = getOffsets(offset)\n\n  const setOutView = function () {\n    if (outViewCallback && isVisible) {\n      try {\n        outViewCallback()\n      } catch (err) {\n        console.error(err)\n      }\n    }\n    isVisible = false\n  }\n\n  const setInView = function (entry) {\n    if (inViewCallback && !isVisible) {\n      try {\n        inViewCallback()\n      } catch (err) {\n        console.error(err)\n      }\n      if (once) {\n        removeObserver(entry)\n      }\n    }\n    isVisible = true\n  }\n\n  const removeObserver = function (entry) {\n    if (observerIsSupported()) {\n      observer.unobserve(entry.target)\n    } else {\n      window.removeEventListener('scroll', _scrollHandler, {capture: false, passive: true})\n    }\n  }\n\n  const _scrollUpdate = function () {\n    boundingRect = target.getBoundingClientRect()\n    var topBorderOfElementIsInViewport = boundingRect.top <= (window.innerHeight + offsets.bottom)\n    var bottomBorderOfElementIsInViewport = (boundingRect.bottom - offsets.bottom) >= 0\n    if (topBorderOfElementIsInViewport && bottomBorderOfElementIsInViewport) {\n      setInView()\n    } else {\n      setOutView()\n    }\n    isUpdating = false\n  }\n\n  const _scrollHandler = function () {\n    if (isUpdating) {\n      return false\n    }\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(_scrollUpdate)\n      isUpdating = true\n    } else {\n      _scrollUpdate()\n    }\n  }\n\n  if (observerIsSupported()) {\n    const config = {\n      rootMargin: offsets.top + 'px ' + offsets.right + 'px ' + offsets.bottom + 'px ' + offsets.left + 'px',\n    }\n    observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          setInView(entry)\n        } else {\n          setOutView()\n        }\n      })\n    }, config)\n    observer.observe(target)\n  } else {\n    window.addEventListener('scroll', _scrollHandler, {capture: false, passive: true})\n  }\n}\n\nexport default initialize\n","/**\n * Add IntersectionObserver to observe elements entering and leaving the viewport\n * Fallback: scroll event with requestAnimationFrame\n * @param  {object} target         - Target node element to observe\n * @param  {boolean} once    - If true: set unobserve\n * @param  {function} inViewCallback  - Function to call target element enters viewport\n * @param  {integer} offset    - Offset to specify when to call callbacks\n * @param  {function} outViewCallback  - Function to call target element leaves viewport\n */\n\nimport initialize from './initialize.js'\n\nconst once = function (target, inViewCallback, offset, outViewCallback) {\n  initialize(target, true, inViewCallback, offset, outViewCallback)\n}\n\nconst repeat = function (target, inViewCallback, offset, outViewCallback) {\n  initialize(target, false, inViewCallback, offset, outViewCallback)\n}\n\nexport default {\n  once,\n  repeat,\n}\n","import store from '../store/store.js'\nimport Observer from 'smb-element-observer'\n\nlet formularInteractionTracked = false\nconst eventLabel = window.location.href\nconst eventCategory = 'Smartphone Rate Calculator'\n\n/**\n * track module embed event\n */\nexport const embed = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'embed',\n      eventLabel: eventLabel,\n      nonInteraction: true,\n      metric82: 1,\n    })\n  } catch (e) {}\n}\n\n/**\n * add event listerner to track module visible event\n */\nexport const listenToVisibleEvent = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  Observer.once(store.get().container, () => {\n    try {\n      window.smbt.emit('custom-event', {\n        hitType: 'event',\n        eventCategory: eventCategory,\n        eventAction: 'visible',\n        eventLabel: eventLabel,\n        nonInteraction: true,\n        metric83: 1,\n      })\n    } catch (e) {}\n  })\n}\n\n/**\n * track check button clicked\n */\nexport const checkButtonClick = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'Check button clicked',\n      eventLabel: eventLabel,\n      metric85: 1,\n    })\n  } catch (e) {}\n}\n\n/**\n * add event listerner to track formular value changed\n */\nexport const listenToFormularInputChanged = (formularItem) => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  formularItem.addEventListener('change', () => {\n    removeFormularInteractionListerner(formularItem)\n    trackFormularInputChanged()\n  })\n}\n\n/**\n * track formular interaction only once\n */\nconst trackFormularInputChanged = () => {\n  if (formularInteractionTracked) {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'clicked',\n      eventLabel: eventLabel,\n      metric84: 1,\n    })\n  } catch (e) {}\n\n  formularInteractionTracked = true\n}\n\n/**\n * remove event listerner for formular interaction\n * @param formularItem\n */\nconst removeFormularInteractionListerner = (formularItem) => {\n  formularItem.removeEventListener('change', () => {\n    removeFormularInteractionListerner(formularItem)\n    trackFormularInputChanged()\n  })\n}\n\n/**\n * add event listerner to track click event on affiliate links\n */\nexport const listenToAffiliateLinkClick = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  const links = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-affiliate-link\"]')\n  if (links.length === 0) {\n    return\n  }\n\n  links.forEach((link, index) => {\n    link.addEventListener('click', function () {\n      try {\n        window.smbt.emit('custom-event', {\n          hitType: 'event',\n          eventCategory: eventCategory,\n          eventAction: `Offer button ${index + 1} clicked`,\n          eventLabel: eventLabel,\n          metric86: 1,\n        })\n      } catch (e) {}\n    })\n  })\n}\n\n/**\n * track user result\n * @param categoryText\n */\nexport const result = (categoryText) => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: `Current contract ${categoryText}`,\n      eventLabel: eventLabel,\n    })\n  } catch (e) {}\n}\n\n/**\n * track email sended\n */\nexport const sendEmail = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'Mail address added',\n      eventLabel: eventLabel,\n    })\n  } catch (e) {}\n}\n","import store from '../store/store.js'\nimport * as track from '../common/tracking.js'\n\n/**\n * render list of deals\n */\nconst renderDeals = () => {\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-deals\"]')\n\n  if (container === null) {\n    return\n  }\n\n  if (store.get().deals.length === 0) {\n    container.innerHTML = ``\n  } else {\n    container.innerHTML = `\n      <ul class=\"list-group smb-phone-plan-deals-list\">\n        ${store.get().deals.map((deal, index) => `\n          <li class=\"list-group-item smb-phone-plan-deal-item clearfix\">\n            <div class=\"col-sm-8\">\n              <h4 class=\"smb-phone-plan-deal-title\">${deal.title}</h4>\n              ${deal.productInfoUrl ? `\n                  <p>${deal.company ? `${deal.company}: ` : ``}<a href=\"${deal.productInfoUrl}\" target=\"_blank\">${deal.product}</a></p>\n                ` : `\n                  <p>${deal.company ? `${deal.company}: ` : ``}${deal.product}</p>\n                `}\n            </div>\n            <div class=\"col-sm-4\">\n              <div class=\"text-center smb-phone-plan-deal-price\">${deal.price}€</div>\n              <a class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-affiliate-link\" href=\"${deal.link}\" target=\"_blank\">Zum Angebot</a>\n            </div>\n          </li>\n        `.trim()).join('')}\n      </ul>\n    `\n\n    track.listenToAffiliateLinkClick()\n  }\n}\n\nexport default renderDeals\n","import store from '../store/store.js'\nimport * as track from '../common/tracking.js'\nimport { validateEmail } from '../common/validation.js'\n\n/**\n * render user result\n */\nconst renderResult = () => {\n  const content = getContentByResult()\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-result\"]')\n\n  if (container) {\n    container.innerHTML = `\n      <hr />\n      <h3 class=\"\">Dein Ergebnis</h3>\n      <div class=\"smb-phone-plan-progress\">\n        <div class=\"smb-phone-plan-progress-bar ${content.progressClass}\" data-role=\"smb-phone-plan-progress-bar\"></div>\n        <i class=\"smb-phone-plan-thumb-icon ${content.thumbIconClass}\" data-role=\"smb-phone-plan-thumb-icon\"></i>\n      </div>\n      ${store.get().resultCategory === 0 ? `\n        <p><strong>Dein Tarif ist ${content.categoryText}. ${store.get().priceDiffence ? `Du zahlst ${store.get().priceDiffence.replace('.', ',')}€ zu viel im Monat.` : ``}</strong></p>\n        <p><strong>Hier gibt es bessere Alternativen:</strong></p>\n      ` : `\n        <strong>Herzlichen Glückwünsch, du hast einen tollen Tarif!</strong>\n        ${store.get().emailSended === false ? `\n          <hr />\n          <div data-role=\"smb-phone-plan-email\">\n            <p>Informiere mich per E-Mail, wenn es ein besseres Angebot gibt!</p>\n            <div class=\"row\">\n              <div class=\"form-group col-sm-6\">\n                <input type=\"email\" class=\"form-control\" data-role=\"smb-phone-plan-email-input\" placeholder=\"E-Mail-Adresse\">\n              </div>\n              <div class=\"form-group col-sm-6\">\n                <button class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-send-email\">Absenden</button>\n              </div>\n            </div>\n          </div>\n        ` : ``}\n      `}\n    `\n\n    setProgressBarTransition(store.get().resultPercent)\n    setThumbIconShake()\n    listenToSendEmailClick()\n    track.result(content.categoryText)\n  }\n}\n\n/**\n * return result content by user's result category\n * @returns {{progressClass: string, categoryText: string}}\n */\nconst getContentByResult = () => {\n  let content = {\n    categoryText: 'schlecht',\n    thumbIconClass: 'icon-thumbs-down',\n    progressClass: 'smb-phone-plan-danger',\n  }\n\n  if (store.get().resultCategory === 1) {\n    content.categoryText = 'gut'\n    content.thumbIconClass = 'icon-thumbs-up'\n    content.progressClass = 'smb-phone-plan-success'\n  }\n\n  return content\n}\n\n/**\n * workaround to animate progress bar\n * @param progressWidth\n */\nconst setProgressBarTransition = (progressWidth) => {\n  const progressBar = store.get().container.querySelector('[data-role=\"smb-phone-plan-progress-bar\"]')\n\n  if (progressBar === null) {\n    return\n  }\n\n  setTimeout(() => {\n    progressBar.style.width = `${progressWidth}%`\n  }, 100)\n}\n\n/**\n * add shake class to thumb icon\n */\nconst setThumbIconShake = () => {\n  const thumbIcon = store.get().container.querySelector('[data-role=\"smb-phone-plan-thumb-icon\"]')\n\n  if (thumbIcon === null) {\n    return\n  }\n\n  setTimeout(() => {\n    thumbIcon.classList.add('shake')\n  }, 1000)\n}\n\n/**\n * event listerner for send email button\n */\nconst listenToSendEmailClick = () => {\n  const sendButton = store.get().container.querySelector('[data-role=\"smb-phone-plan-send-email\"]')\n\n  if (sendButton === null) {\n    return\n  }\n\n  sendButton.addEventListener('click', () => {\n    const emailForm = store.get().container.querySelector('[data-role=\"smb-phone-plan-email\"]')\n    const email = store.get().container.querySelector('[data-role=\"smb-phone-plan-email-input\"]')\n\n    if (emailForm === null || email === null) {\n      return\n    }\n\n    if (validateEmail(email.value) === false) {\n      email.parentElement.classList.add('has-error')\n      return\n    }\n\n    emailForm.innerHTML = `<p>Vielen Dank! Du erhältst von uns eine E-Mail, sobald wir ein Angebot mit den gleichen Konditionen zu einem besseren Preis finden. Bis dahin kannst du entspannt deinen Tarif weiternutzen.</p>`\n    store.set({ emailSended: true })\n    track.sendEmail()\n  })\n}\n\nexport default renderResult\n","import store from '../store/store.js'\n\n/**\n * validate formular and return input values\n * @returns {{}}\n */\nexport const validateFormularData = () => {\n  let error = false\n  let formularData = {}\n  const formularItems = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-formular-item\"]')\n\n  for (let i = 0; i < formularItems.length; i++) {\n    const formularItem = formularItems[i]\n    const name = formularItem.dataset.name\n    const required = formularItem.dataset.required\n\n    if (required && formularItem.value === '') {\n      error = true\n      formularItem.parentElement.classList.add('has-error')\n    } else {\n      formularItem.parentElement.classList.remove('has-error')\n    }\n\n    if (formularItem.type === 'checkbox') {\n      formularData[name] = formularItem.checked\n    } else {\n      formularData[name] = formularItem.value\n    }\n  }\n\n  if (error) {\n    return {}\n  }\n\n  return formularData\n}\n\n/**\n * validate email input\n * @param email\n * @returns {boolean}\n */\nexport const validateEmail = (email) => {\n  const regex = /\\S+@\\S+\\.\\S+/\n  return regex.test(email)\n}\n","import store from '../store/store.js'\n\n/**\n * return random facts\n * @returns {string}\n */\nconst getRandomFacts = () => {\n  const facts = [\n    '57 Millionen Deutsche besitzen ein Smartphone. (Quelle: statista)',\n    '43% der 20 bis 29-Jährigen in Deutschland nutzen ihr Smartphone mehr als 120 Minuten täglich. (Quelle: statista)',\n    'Die Netzabdeckung mit 4G liegt in Deutschland bei 65%, in Norwegen bei 92%. (Quelle: statista)',\n  ]\n\n  return facts[Math.floor(Math.random() * facts.length)]\n}\n\n/**\n * render processing with a random fact\n */\nexport const renderProcessing = () => {\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-processing\"]')\n\n  if (container) {\n    container.innerHTML = `\n      <hr />\n      <div class=\"smb-phone-plan-loading-dot-container text-center\">\n        <p>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n        </p>\n      </div>\n      <p class=\"text-center\">${getRandomFacts()}</p>\n    `\n  }\n}\n\n/**\n * remove processing\n */\nexport const removeProcessing = () => {\n  const processing = store.get().container.querySelector('[data-role=\"smb-phone-plan-processing\"]')\n\n  if (processing) {\n    processing.remove()\n  }\n}\n","import '../stylesheets/imports.scss'\nimport store from './store/store.js'\nimport getTariffs from './store/tariffs.js'\nimport renderDeals from './render/deals.js'\nimport renderResult from './render/result.js'\nimport * as track from './common/tracking.js'\nimport { validateFormularData } from './common/validation.js'\nimport { renderProcessing, removeProcessing } from './render/processing.js'\nimport { renderStage, blurFormular, unBlurFormular } from './render/stage.js'\n\nif (process.env.NODE_ENV === 'development') {\n  import('../stylesheets/demo.scss')\n}\n\n/**\n * init function to init store, render stage, add event listerners and tracking\n * @param options\n */\nconst init = (options) => {\n  store.init(options)\n\n  if (store.get().container === null) {\n    return\n  }\n\n  renderStage()\n  listenToCheckClick()\n  listenToEnterClick()\n  listenToFormularInteraction()\n  track.embed()\n  track.listenToVisibleEvent()\n}\n\n/**\n * event listerner for check button\n */\nconst listenToCheckClick = () => {\n  const checkButton = store.get().container.querySelector('[data-role=\"smb-phone-plan-check\"]')\n\n  if (checkButton === null) {\n    return\n  }\n\n  checkButton.addEventListener('click', () => {\n    track.checkButtonClick()\n    calculateUserTarif()\n  })\n}\n\n/**\n * event listerner for enter button\n */\nconst listenToEnterClick = () => {\n  document.onkeydown = (e) => {\n    if (e.keyCode === 13) {\n      track.checkButtonClick()\n      calculateUserTarif()\n    }\n  }\n}\n\n/**\n * calculate user input and render result\n */\nconst calculateUserTarif = () => {\n  const formularData = validateFormularData()\n\n  if (Object.keys(formularData).length === 0) {\n    return\n  }\n\n  renderProcessing()\n  blurFormular()\n  getTariffs().then(() => {\n    store.setResult(formularData)\n  }).then(() => {\n    removeProcessing()\n    renderResult()\n    renderDeals()\n  })\n}\n\n/**\n * add event listerner to track formular interaction.\n */\nexport const listenToFormularInteraction = () => {\n  const formularItems = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-formular-item\"]')\n\n  for (let i = 0; i < formularItems.length; i++) {\n    const formularItem = formularItems[i]\n\n    listenToFormularFocussed(formularItem)\n    track.listenToFormularInputChanged(formularItem)\n  }\n}\n\n/**\n * unblur formular if one of the inputs are focussed and formular is already blur\n * @param formularItem\n */\nconst listenToFormularFocussed = (formularItem) => {\n  formularItem.addEventListener('focus', () => {\n    unBlurFormular()\n  })\n}\n\nexport default init\n","import store from '../store/store.js'\n\n/**\n * render phone plan stage, initially with formular and placeholder for next steps\n */\nexport const renderStage = () => {\n  store.get().container.innerHTML = `\n    <div class=\"smb-phone-plan-container\">\n      <div class=\"smb-phone-plan-header\">\n        <h2 class=\"smb-phone-plan-title\">Wie gut ist dein Handyvertrag?</h2>\n        ${store.get().logo ? `\n          <img class=\"smb-phone-plan-logo\" src=\"${store.get().logo}\" alt=\"\">\n        ` : ``}\n      </div>\n      <div class=\"smb-phone-plan-body\">\n        <div class=\"smb-phone-plan-formular\" data-role=\"smb-phone-plan-formular\">\n          <div class=\"form-group input-group\">\n            <input type=\"number\" class=\"form-control\" placeholder=\"Wieviel zahlst du pro Monat?\" value=\"\" data-role=\"smb-phone-plan-formular-item\" data-name=\"price\" data-required=\"1\">\n            <div class=\"input-group-addon\">€</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"form-group col-sm-6\">\n              <select class=\"form-control\" data-role=\"smb-phone-plan-formular-item\" data-name=\"provider\" data-required=\"1\">\n                <option value=\"\">Netz</option>\n                <option value=\"d1\">Telekom (D1)</option>\n                <option value=\"d2\">Vodafone (D2)</option>\n                <option value=\"telefónica\">Telefónica (O2)</option>\n              </select>\n            </div>\n            <div class=\"form-group col-sm-6\">\n              <select class=\"form-control\" data-role=\"smb-phone-plan-formular-item\" data-name=\"volume\" data-required=\"1\">\n                <option value=\"\">Datenvolumen</option>\n                <option value=\"0.5\">unter 1GB</option>\n                <option value=\"1\">1GB</option>\n                <option value=\"2\">2GB</option>\n                <option value=\"3\">3GB</option>\n                <option value=\"4\">4GB</option>\n                <option value=\"5\">5GB</option>\n                <option value=\"6\">6GB</option>\n                <option value=\"8\">8GB</option>\n                <option value=\"10\">10GB</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row form-group clearfix\">\n            <div class=\"col-sm-6\">\n              <label class=\"custom-control-label\">\n                <input type=\"checkbox\" class=\"custom-control-input\" data-role=\"smb-phone-plan-formular-item\" data-name=\"lte\">\n                &nbsp;LTE\n              </label>\n            </div>\n            <div class=\"col-sm-6\">\n              <label class=\"custom-control-label\">\n                <input type=\"checkbox\" class=\"custom-control-input\" data-role=\"smb-phone-plan-formular-item\" data-name=\"flatrate\">\n                &nbsp;Telefon-Flatrate\n              </label>\n            </div>\n          </div>\n          <button class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-check\">Jetzt prüfen!</button>\n        </div>\n        <div class=\"smb-phone-plan-processing\" data-role=\"smb-phone-plan-processing\"></div>\n        <div class=\"smb-phone-plan-result\" data-role=\"smb-phone-plan-result\"></div>\n        <div class=\"smb-phone-plan-deals\" data-role=\"smb-phone-plan-deals\"></div>\n      </div>\n    </div>\n  `\n}\n\n/**\n * remove blur class of formular\n */\nexport const unBlurFormular = () => {\n  const formular = store.get().container.querySelector('[data-role=\"smb-phone-plan-formular\"]')\n\n  if (formular === null || formular.classList.contains('blur') === false) {\n    return\n  }\n\n  formular.classList.remove('blur')\n}\n\n/**\n * add blur class to formular\n */\nexport const blurFormular = () => {\n  const formular = store.get().container.querySelector('[data-role=\"smb-phone-plan-formular\"]')\n\n  if (formular === null || formular.classList.contains('blur')) {\n    return\n  }\n\n  formular.classList.add('blur')\n}\n"],"sourceRoot":""}