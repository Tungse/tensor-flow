{"version":3,"sources":["webpack://smbPhonePlan/webpack/universalModuleDefinition","webpack://smbPhonePlan/webpack/bootstrap","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/util.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/parser.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/node2json.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/xmlNode.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/nimndata.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/node2json_str.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/validator.js","webpack://smbPhonePlan/./node_modules/fast-xml-parser/src/json2xml.js","webpack://smbPhonePlan/./src/js/store/deals.js","webpack://smbPhonePlan/./src/js/store/store.js","webpack://smbPhonePlan/./src/js/store/tariffs.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/helpers/support.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/helpers/offset.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/initialize.js","webpack://smbPhonePlan/./node_modules/smb-element-observer/src/index.js","webpack://smbPhonePlan/./src/js/common/tracking.js","webpack://smbPhonePlan/./src/js/render/deals.js","webpack://smbPhonePlan/./src/js/render/result.js","webpack://smbPhonePlan/./src/js/common/validation.js","webpack://smbPhonePlan/./src/js/render/processing.js","webpack://smbPhonePlan/./src/js/index.js","webpack://smbPhonePlan/./src/js/render/stage.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","doesMatch","string","regex","match","exec","isExist","v","isEmptyObject","obj","keys","length","merge","target","a","len","getValue","buildOptions","options","defaultOptions","props","newOptions","undefined","doesNotMatch","getAllMatches","matches","allmatches","index","push","util","xmlNode","TagType","OPENING","CLOSING","SELF","CDATA","regx","Number","parseInt","parseFloat","attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","arrayMode","trimValues","cdataTagName","cdataPositionChar","localeRange","tagValueProcessor","attrValueProcessor","stopNodes","processTagValue","val","trim","parseValue","parseTrueNumberOnly","resolveNameSpace","tagname","tags","split","prefix","charAt","shouldParse","parsed","isNaN","indexOf","String","attrsRegx","RegExp","buildAttributesMap","attrStr","replace","attrs","attrName","attrCollection","getTraversalObj","xmlData","xmlObj","currentNode","tagsRegx","tag","nextTag","tagType","substr","parent","includes","child","attrsMap","startIndex","childNode","addChild","nodeToJson","xmlToNodeobj","x2xmlnode","parse","convertToJson","convertTonimn","convert2nimn","convertToJsonString","validate","j2xParser","parseToNimn","schema","node","jObj","this","Array","isArray","char","fromCharCode","chars","nilChar","missingChar","nilPremitive","missingPremitive","emptyChar","emptyValue","boundryChar","objStart","arrStart","arrayEnd","charsArr","_e","e_schema","hasValidData","str","itemSchema","arr_len","arr_i","processValue","isAppChar","ch","x2j","_cToJsonStr","level","indentBy","readPI","start","err","code","msg","readCommentAndCDATA","angleBracketsCount","tagFound","regxAttrName","regxTagName","closingTag","tagName","substring","validateTagName","result","readAttributeStr","isValid","validateAttributeString","otg","pop","JSON","stringify","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","validateAttrName","format","supressEmptyNode","Parser","isAttribute","attrPrefixLen","isCDATA","replaceCDATAstr","replaceCDATAarr","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","cdata","join","repeat","startsWith","j2x","Date","attr","arrLen","j","item","Ks","L","deals","priceDiffence","setDeal","category","tarif","getDealIndexByCategory","deal","link","product","company","provider","productInfoUrl","title","getTitleByDealCategory","price","toFixed","setPriceDiffence","userPrice","tarifPrice","getProviderMapping","sortDeals","sort","b","getTarifPriceCategory","getTarifConditionCategory","user","worseLte","lte","worseVolume","volume","worseFlatrate","flatrate","store","container","endpoint","set","action","assign","getResultCategory","getResultPercent","store_store","init","settings","tariffs","calculated","emailSended","resultCategory","resultPercent","logo","document","querySelector","setResult","formularData","currentVolume","lowestPrice","bestPrice","bestPriceByProvider","userCondition","tarifVolume","tarifProvider","tarifCondition","condition","getDeals","setTimerToResolvePromise","resolve","setTimeout","cleanData","fallbackData","requestXML","request","XMLHttpRequest","open","timeout","onreadystatechange","readyState","status","response","data","xmlParser","send","e","items","handytarif","_typeof","forEach","mobileweb_lte","url_moreinfo","services_phone","cost_pm","toLowerCase","mobileweb_volume","getTariffs","Promise","reject","support","IntersectionObserverEntry","helpers_offset","offset","offsets","top","right","bottom","left","src_initialize","once","inViewCallback","outViewCallback","observer","boundingRect","isUpdating","isVisible","setOutView","console","error","setInView","entry","removeObserver","unobserve","removeEventListener","_scrollHandler","capture","passive","_scrollUpdate","topBorderOfElementIsInViewport","getBoundingClientRect","innerHeight","bottomBorderOfElementIsInViewport","requestAnimationFrame","config","rootMargin","IntersectionObserver","entries","isIntersecting","observe","addEventListener","src","formularInteractionTracked","eventLabel","location","href","eventCategory","listenToFormularInputChanged","formularItem","smbt","removeFormularInteractionListerner","trackFormularInputChanged","emit","hitType","eventAction","metric84","renderDeals","innerHTML","concat","map","links","querySelectorAll","metric86","track","getContentByResult","content","categoryText","thumbIconClass","progressClass","setProgressBarTransition","progressWidth","progressBar","style","width","setThumbIconShake","thumbIcon","classList","add","listenToSendEmailClick","sendButton","emailForm","email","test","validateEmail","parentElement","renderResult","renderProcessing","facts","Math","floor","random","listenToCheckClick","checkButton","calculateUserTarif","listenToEnterClick","onkeydown","keyCode","formular","formularItems","dataset","required","remove","type","checked","validateFormularData","metric85","then","processing","listenToFormularInteraction","listenToFormularFocussed","nonInteraction","metric82","Observer","metric83"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,aAAAD,IAEAD,EAAA,aAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,kCChFA,MAeAC,EAAA,SAAAC,EAAAC,GACA,MAAAC,EAAAD,EAAAE,KAAAH,GACA,cAAAE,IAOA3C,EAAA6C,QAAA,SAAAC,GACA,gBAAAA,GAGA9C,EAAA+C,cAAA,SAAAC,GACA,WAAA9B,OAAA+B,KAAAD,GAAAE,QAQAlD,EAAAmD,MAAA,SAAAC,EAAAC,GACA,GAAAA,EAAA,CACA,MAAAJ,EAAA/B,OAAA+B,KAAAI,GACAC,EAAAL,EAAAC,OACA,QAAA1C,EAAA,EAAmBA,EAAA8C,EAAS9C,IAC5B4C,EAAAH,EAAAzC,IAAA6C,EAAAJ,EAAAzC,MAQAR,EAAAuD,SAAA,SAAAT,GACA,OAAA9C,EAAA6C,QAAAC,GACAA,EAEA,IAOA9C,EAAAwD,aAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GACA,IAAAH,EACA,OAAAC,EAGA,QAAAlD,EAAA,EAAiBA,EAAAmD,EAAAT,OAAkB1C,SACnCqD,IAAAJ,EAAAE,EAAAnD,IACAoD,EAAAD,EAAAnD,IAAAiD,EAAAE,EAAAnD,IAEAoD,EAAAD,EAAAnD,IAAAkD,EAAAC,EAAAnD,IAGA,OAAAoD,GAGA5D,EAAAwC,YACAxC,EAAA8D,aA1DA,SAAArB,EAAAC,GACA,OAAAF,EAAAC,EAAAC,IA0DA1C,EAAA+D,cA/EA,SAAAtB,EAAAC,GACA,MAAAsB,EAAA,GACA,IAAArB,EAAAD,EAAAE,KAAAH,GACA,KAAAE,GAAA,CACA,MAAAsB,EAAA,GACAX,EAAAX,EAAAO,OACA,QAAAgB,EAAA,EAAuBA,EAAAZ,EAAaY,IACpCD,EAAAE,KAAAxB,EAAAuB,IAEAF,EAAAG,KAAAF,GACAtB,EAAAD,EAAAE,KAAAH,GAEA,OAAAuB,iCCZA,MAAAI,EAAa9D,EAAQ,GACrBkD,EAAqBlD,EAAQ,GAAQkD,aACrCa,EAAgB/D,EAAQ,GACxBgE,EAAA,CAAiBC,QAAA,EAAAC,QAAA,EAAAC,KAAA,EAAAC,MAAA,GACjB,IAAAC,EACA,mIAMAC,OAAAC,UAAAzE,OAAAyE,WACAD,OAAAC,SAAAzE,OAAAyE,WAEAD,OAAAE,YAAA1E,OAAA0E,aACAF,OAAAE,WAAA1E,OAAA0E,YAGA,MAAApB,EAAA,CACAqB,oBAAA,KACAC,cAAA,EACAC,aAAA,QACAC,kBAAA,EACAC,iBAAA,EACAC,wBAAA,EAEAC,gBAAA,EACAC,qBAAA,EACAC,WAAA,EACAC,YAAA,EACAC,cAAA,EACAC,kBAAA,MACAC,YAAA,GACAC,kBAAA,SAAAvC,GACA,OAAAA,GAEAwC,mBAAA,SAAAxC,GACA,OAAAA,GAEAyC,UAAA,IAIA9F,EAAA0D,iBAEA,MAAAC,EAAA,CACA,sBACA,eACA,eACA,mBACA,kBACA,yBACA,iBACA,sBACA,YACA,aACA,eACA,oBACA,cACA,oBACA,qBACA,sBACA,aAEA3D,EAAA2D,QA4EA,SAAAoC,EAAAC,EAAAvC,GASA,OARAuC,IACAvC,EAAA+B,aACAQ,IAAAC,QAGAD,EAAAE,EADAF,EAAAvC,EAAAmC,kBAAAI,GACAvC,EAAA4B,eAAA5B,EAAA0C,sBAGAH,EAeA,SAAAI,EAAAC,EAAA5C,GACA,GAAAA,EAAA0B,gBAAA,CACA,MAAAmB,EAAAD,EAAAE,MAAA,KACAC,EAAA,MAAAH,EAAAI,OAAA,UACA,aAAAH,EAAA,GACA,SAEA,IAAAA,EAAApD,SACAmD,EAAAG,EAAAF,EAAA,IAGA,OAAAD,EAGA,SAAAH,EAAAF,EAAAU,EAAAP,GACA,GAAAO,GAAA,iBAAAV,EAAA,CACA,IAAAW,EAgBA,MAfA,KAAAX,EAAAC,QAAAW,MAAAZ,GACAW,EAAA,SAAAX,GAAA,UAAAA,MAIAW,GAFA,IAAAX,EAAAa,QAAA,MAEAjC,OAAAC,SAAAmB,EAAA,KACO,IAAAA,EAAAa,QAAA,KACPjC,OAAAE,WAAAkB,GAEApB,OAAAC,SAAAmB,EAAA,IAEAG,IACAQ,EAAAG,OAAAH,KAAAX,EAAAW,EAAAX,IAGAW,EAEA,OAAAvC,EAAAvB,QAAAmD,GACAA,EAEA,GAOA,MAAAe,EAAA,IAAAC,OAAA,6CAEA,SAAAC,EAAAC,EAAAzD,GACA,IAAAA,EAAAyB,kBAAA,iBAAAgC,EAAA,CACAA,IAAAC,QAAA,cAGA,MAAAnD,EAAAI,EAAAL,cAAAmD,EAAAH,GACAzD,EAAAU,EAAAd,OACAkE,EAAA,GACA,QAAA5G,EAAA,EAAmBA,EAAA8C,EAAS9C,IAAA,CAC5B,MAAA6G,EAAAjB,EAAApC,EAAAxD,GAAA,GAAAiD,GACA4D,EAAAnE,cACAW,IAAAG,EAAAxD,GAAA,IACAiD,EAAA+B,aACAxB,EAAAxD,GAAA,GAAAwD,EAAAxD,GAAA,GAAAyF,QAEAjC,EAAAxD,GAAA,GAAAiD,EAAAoC,mBAAA7B,EAAAxD,GAAA,IACA4G,EAAA3D,EAAAsB,oBAAAsC,GAAAnB,EACAlC,EAAAxD,GAAA,GACAiD,EAAA6B,oBACA7B,EAAA0C,sBAES1C,EAAA2B,yBACTgC,EAAA3D,EAAAsB,oBAAAsC,IAAA,IAIA,IAAAnG,OAAA+B,KAAAmE,GAAAlE,OACA,OAEA,GAAAO,EAAAuB,aAAA,CACA,MAAAsC,EAAA,GAEA,OADAA,EAAA7D,EAAAuB,cAAAoC,EACAE,EAEA,OAAAF,GAIApH,EAAAuH,gBAtLA,SAAAC,EAAA/D,GACAA,EAAAD,EAAAC,EAAAC,EAAAC,GAEA6D,IAAAL,QAAA,uBAEA,MAAAM,EAAA,IAAApD,EAAA,QACA,IAAAqD,EAAAD,EAEA9C,IAAAwC,QAAA,aAAA1D,EAAAkC,YAAA,OACA,MAAAgC,EAAA,IAAAX,OAAArC,EAAA,KACA,IAAAiD,EAAAD,EAAA/E,KAAA4E,GACAK,EAAAF,EAAA/E,KAAA4E,GACA,KAAAI,GAAA,CACA,MAAAE,EA0EA,SADAnF,EAzEAiF,GA0EA,GACAtD,EAAAI,MACG,MAAA/B,EAAA,IACH2B,EAAAE,aACG,IAAA7B,EAAA,UAAAA,EAAA,GAAAoF,OAAApF,EAAA,GAAAO,OAAA,GACHoB,EAAAG,KAEAH,EAAAC,QA/EA,GAAAuD,IAAAxD,EAAAE,QAEAkD,EAAAM,QAAAJ,EAAA,MACAF,EAAAM,OAAAhC,IAAA5B,EAAAb,SAAAmE,EAAAM,OAAAhC,KAAA,GAAAD,EAAA6B,EAAA,IAAAnE,IAEAA,EAAAqC,UAAA5C,QAAAO,EAAAqC,UAAAmC,SAAAP,EAAArB,WACAqB,EAAAQ,MAAA,GACArE,MAAA6D,EAAAS,WAAgDT,EAAAS,SAAA,IAChDT,EAAA1B,IAAAwB,EAAAO,OAAAL,EAAAU,WAAA,EAAAR,EAAA1D,MAAAwD,EAAAU,WAAA,IAEAV,IAAAM,YACK,GAAAF,IAAAxD,EAAAI,MACL,GAAAjB,EAAAgC,aAAA,CAEA,MAAA4C,EAAA,IAAAhE,EAAAZ,EAAAgC,aAAAiC,EAAAE,EAAA,IACAS,EAAAF,SAAAlB,EAAAW,EAAA,GAAAnE,GACAiE,EAAAY,SAAAD,GAEAX,EAAA1B,IAAA5B,EAAAb,SAAAmE,EAAA1B,KAAAvC,EAAAiC,kBAEAkC,EAAA,MACAF,EAAA1B,KAAAD,EAAA6B,EAAA,IAAAnE,SAGAiE,EAAA1B,KAAA0B,EAAA1B,KAAA,KAAA4B,EAAA,QAAA7B,EAAA6B,EAAA,IAAAnE,QAEK,GAAAqE,IAAAxD,EAAAG,KAAA,CACLiD,GAAAE,EAAA,MACAF,EAAA1B,IAAA5B,EAAAb,SAAAmE,EAAA1B,KAAA,GAAAD,EAAA6B,EAAA,IAAAnE,IAGA,MAAA4E,EAAA,IAAAhE,EAAAZ,EAAA0B,gBAAAyC,EAAA,GAAAA,EAAA,GAAAF,EAAA,IACAE,EAAA,IAAAA,EAAA,GAAA1E,OAAA,IACA0E,EAAA,GAAAA,EAAA,GAAAG,OAAA,EAAAH,EAAA,GAAA1E,OAAA,IAEAmF,EAAAF,SAAAlB,EAAAW,EAAA,GAAAnE,GACAiE,EAAAY,SAAAD,OACK,CAEL,MAAAA,EAAA,IAAAhE,EACAZ,EAAA0B,gBAAAyC,EAAA,GAAAA,EAAA,GACAF,EACA3B,EAAA6B,EAAA,IAAAnE,IAEAA,EAAAqC,UAAA5C,QAAAO,EAAAqC,UAAAmC,SAAAI,EAAAhC,WACAgC,EAAAD,WAAAR,EAAA1D,MAAA0D,EAAA,GAAA1E,QAEAmF,EAAAF,SAAAlB,EAAAW,EAAA,GAAAnE,GACAiE,EAAAY,SAAAD,GACAX,EAAAW,EAGAT,EAAAC,EACAA,EAAAF,EAAA/E,KAAA4E,GAkBA,IAAA7E,EAfA,OAAA8E,iCCzIA,MAAAc,EAAmBjI,EAAQ,GAC3BkI,EAAqBlI,EAAQ,GAC7BmI,EAAkBnI,EAAQ,GAC1BkD,EAAqBlD,EAAQ,GAAQkD,aAErCxD,EAAA0I,MAAA,SAAAlB,EAAA/D,GAEA,OADAA,EAAAD,EAAAC,EAAAgF,EAAA/E,eAAA+E,EAAA9E,OACA4E,EAAAI,cAAAH,EAAAjB,gBAAAC,EAAA/D,OAEAzD,EAAA4I,cAAwBtI,EAAQ,GAAiBuI,aACjD7I,EAAAuH,gBAAAiB,EAAAjB,gBACAvH,EAAA2I,cAAAJ,EAAAI,cACA3I,EAAA8I,oBAA8BxI,EAAQ,GAAiBwI,oBACvD9I,EAAA+I,SAAmBzI,EAAQ,IAAayI,SACxC/I,EAAAgJ,UAAoB1I,EAAQ,IAC5BN,EAAAiJ,YAAA,SAAAzB,EAAA0B,EAAAzF,GACA,OAAAzD,EAAA4I,cAAA5I,EAAAuH,gBAAAC,EAAA/D,GAAAyF,EAAAzF,44HChBA,MAAAW,EAAa9D,EAAQ,GAErBqI,EAAA,SAAAQ,EAAA1F,GACA,MAAA2F,EAAA,GAGA,KAAAD,EAAAjB,QAAA9D,EAAArB,cAAAoG,EAAAjB,QAAAiB,EAAAhB,WAAA/D,EAAArB,cAAAoG,EAAAhB,WACA,OAAA/D,EAAAvB,QAAAsG,EAAAnD,KAAAmD,EAAAnD,IAAA,GAGA5B,EAAAvB,QAAAsG,EAAAnD,OACA,iBAAAmD,EAAAnD,KAAA,KAAAmD,EAAAnD,KAAAmD,EAAAnD,MAAAvC,EAAAiC,qBACA0D,EAAA3F,EAAAwB,cAAAkE,EAAAnD,KAKA5B,EAAAjB,MAAAiG,EAAAD,EAAAhB,UAEA,MAAAlF,EAAA/B,OAAA+B,KAAAkG,EAAAjB,OACA,QAAAhE,EAAA,EAAqBA,EAAAjB,EAAAC,OAAqBgB,IAAA,CAC1C,IAAAmC,EAAApD,EAAAiB,GACA,GAAAiF,EAAAjB,MAAA7B,IAAA8C,EAAAjB,MAAA7B,GAAAnD,OAAA,EAEA,QAAA0E,KADAwB,EAAA/C,GAAA,GACA8C,EAAAjB,MAAA7B,GACA+C,EAAA/C,GAAAlC,KAAAwE,EAAAQ,EAAAjB,MAAA7B,GAAAuB,GAAAnE,SAGA2F,EAAA/C,GAAAsC,EAAAQ,EAAAjB,MAAA7B,GAAA,GAAA5C,GAKA,OAAA2F,GAGApJ,EAAA2I,8CCpCA1I,EAAAD,QAAA,SAAAqG,EAAA2B,EAAAhC,GACAqD,KAAAhD,UACAgD,KAAArB,SACAqB,KAAAnB,MAAA,GACAmB,KAAAlB,SAAA,GACAkB,KAAArD,MACAqD,KAAAf,SAAA,SAAAJ,GACAoB,MAAAC,QAAAF,KAAAnB,QAAA7B,UAEAgD,KAAAnB,QAAA7B,SAAAlC,KAAA+D,GAEAmB,KAAAnB,QAAA7B,SAAA,CAAA6B,mCCZA,MAAAsB,EAAA,SAAAnG,GACA,OAAAyD,OAAA2C,aAAApG,IAGAqG,EAAA,CACAC,QAAAH,EAAA,KACAI,YAAAJ,EAAA,KACAK,aAAAL,EAAA,KACAM,iBAAAN,EAAA,KAEAO,UAAAP,EAAA,KACAQ,WAAAR,EAAA,KAEAS,YAAAT,EAAA,KAEAU,SAAAV,EAAA,KACAW,SAAAX,EAAA,KACAY,SAAAZ,EAAA,MAGAa,EAAA,CACAX,EAAAC,QACAD,EAAAG,aACAH,EAAAE,YACAF,EAAAI,iBACAJ,EAAAO,YACAP,EAAAK,UACAL,EAAAM,WACAN,EAAAU,SACAV,EAAAQ,SACAR,EAAAS,UAGAG,EAAA,SAAAnB,EAAAoB,EAAA9G,GACA,oBAAA8G,EAEA,OAAApB,KAAA,SAAAtF,IAAAsF,EAAA,GAAAnD,IACAzC,EAAA4F,EAAA,GAAAnD,IAAAuE,GAEAhH,EAAA4F,EAAAoB,GAEG,CACH,MAAAC,OA6EA3G,KADAuF,EA5EAD,GA8EAO,EAAAE,YACG,OAAAR,EACHM,EAAAC,UAEAP,EAAAlB,OACA,IAAAhH,OAAA+B,KAAAmG,EAAAlB,OAAAhF,UACAkG,EAAAjB,UAAA,IAAAjH,OAAA+B,KAAAmG,EAAAjB,UAAAjF,UAEAwG,EAAAK,UArFA,QAAAS,EAAA,CACA,IAAAC,EAAA,GACA,GAAAnB,MAAAC,QAAAgB,GAAA,CAEAE,GAAAf,EAAAS,SACA,MAAAO,EAAAH,EAAA,GAEAI,EAAAxB,EAAAjG,OAEA,oBAAAwH,EACA,QAAAE,EAAA,EAA6BA,EAAAD,EAAiBC,IAAA,CAC9C,MAAAtJ,EAAAiC,EAAA4F,EAAAyB,GAAA5E,IAAA0E,GACAD,EAAAI,EAAAJ,EAAAnJ,QAGA,QAAAsJ,EAAA,EAA6BA,EAAAD,EAAiBC,IAAA,CAC9C,MAAAtJ,EAAAgJ,EAAAnB,EAAAyB,GAAAF,EAAAjH,GACAgH,EAAAI,EAAAJ,EAAAnJ,GAGAmJ,GAAAf,EAAAU,aACO,CAEPK,GAAAf,EAAAQ,SACA,MAAAjH,EAAA/B,OAAA+B,KAAAsH,GACAjB,MAAAC,QAAAJ,KACAA,IAAA,IAEA,QAAA3I,KAAAyC,EAAA,CACA,MAAAlB,EAAAkB,EAAAzC,GAIA,IAAAc,EAEAA,GADAmC,EAAAyB,kBAAAiE,EAAAhB,UAAAgB,EAAAhB,SAAApG,GACAuI,EAAAnB,EAAAhB,SAAApG,GAAAwI,EAAAxI,GAAA0B,GACW1B,IAAA0B,EAAAwB,aACXqF,EAAAnB,EAAAnD,IAAAuE,EAAAxI,GAAA0B,GAEA6G,EAAAnB,EAAAjB,MAAAnG,GAAAwI,EAAAxI,GAAA0B,GAEAgH,EAAAI,EAAAJ,EAAAnJ,IAGA,OAAAmJ,EAEA,OAAAD,EA6BA,IAAApB,GAxBA7F,EAAA,SAAAF,GACA,OAAAA,GACA,UAAAQ,EACA,OAAA6F,EAAAI,iBACA,UACA,OAAAJ,EAAAG,aACA,OACA,OAAAH,EAAAM,WACA,QACA,OAAA3G,IAIAwH,EAAA,SAAAJ,EAAAnJ,GAIA,OAHAwJ,EAAAxJ,EAAA,KAAAwJ,EAAAL,IAAAvH,OAAA,MACAuH,GAAAf,EAAAO,aAEAQ,EAAAnJ,GAGAwJ,EAAA,SAAAC,GACA,WAAAV,EAAAxD,QAAAkE,IAmBA,MAAAC,EAAY1K,EAAQ,GACpBkD,EAAqBlD,EAAQ,GAAQkD,aAOrCxD,EAAA6I,aALA,SAAAM,EAAAoB,EAAA9G,GAEA,OADAA,EAAAD,EAAAC,EAAAuH,EAAAtH,eAAAsH,EAAArH,OACA2G,EAAAnB,EAAAoB,EAAA9G,kCC1IA,MAAAW,EAAa9D,EAAQ,GACrBkD,EAAqBlD,EAAQ,GAAQkD,aACrCwH,EAAY1K,EAAQ,GAUpB2K,EAAA,SAAA9B,EAAA1F,EAAAyH,GACA,IAAA9B,EAAA,IAGA,MAAAnG,EAAA/B,OAAA+B,KAAAkG,EAAAjB,OAEA,QAAAhE,EAAA,EAAqBA,EAAAjB,EAAAC,OAAqBgB,IAAA,CAC1C,IAAAmC,EAAApD,EAAAiB,GACA,GAAAiF,EAAAjB,MAAA7B,IAAA8C,EAAAjB,MAAA7B,GAAAnD,OAAA,GAEA,QAAA0E,KADAwB,GAAA,IAAA/C,EAAA,SACA8C,EAAAjB,MAAA7B,GACA+C,GAAA6B,EAAA9B,EAAAjB,MAAA7B,GAAAuB,GAAAnE,GAAA,MAEA2F,IAAArB,OAAA,EAAAqB,EAAAlG,OAAA,cAEAkG,GAAA,IAAA/C,EAAA,OAAA4E,EAAA9B,EAAAjB,MAAA7B,GAAA,GAAA5C,GAAA,KAKA,OAFAW,EAAAjB,MAAAiG,EAAAD,EAAAhB,UAEA/D,EAAArB,cAAAqG,GACAhF,EAAAvB,QAAAsG,EAAAnD,KAAAmD,EAAAnD,IAAA,IAEA5B,EAAAvB,QAAAsG,EAAAnD,OACA,iBAAAmD,EAAAnD,KAAA,KAAAmD,EAAAnD,KAAAmD,EAAAnD,MAAAvC,EAAAiC,qBACA0D,GAAA,IAAA3F,EAAAwB,aAAA,SAYA,KADAnC,EAXAqG,EAAAnD,OAYA,IAAAlD,GAAA8D,MAAA9D,GAGA,IAAAA,EAAA,IAFAA,IARA,MAAAsG,IAAAlG,OAAA,KACAkG,IAAArB,OAAA,EAAAqB,EAAAlG,OAAA,IAEAkG,EAAA,KAGA,IAAAtG,GAYA9C,EAAA8I,oBAvDA,SAAAK,EAAA1F,GAIA,OAHAA,EAAAD,EAAAC,EAAAuH,EAAAtH,eAAAsH,EAAArH,QAEAwH,SAAA1H,EAAA0H,UAAA,GACAF,EAAA9B,EAAA1F,EAAA,kCCTA,MAAAW,EAAa9D,EAAQ,GAErBoD,EAAA,CACA0B,wBAAA,EACAO,YAAA,UAGAhC,EAAA,yCAkJA,SAAAyH,EAAA5D,EAAAhH,GAEA,IADA,IAAA6K,EAAA7K,EACQA,EAAAgH,EAAAtE,OAAoB1C,IAC5B,QAAAgH,EAAAhH,IAAA,KAAAgH,EAAAhH,QAAA,CAEA,IAAA6F,EAAAmB,EAAAO,OAAAsD,EAAA7K,EAAA6K,GACA,GAAA7K,EAAA,WAAA6F,EACA,OAAgBiF,IAAA,CAAMC,KAAA,aAAAC,IAAA,+DACf,QAAAhE,EAAAhH,IAAA,KAAAgH,EAAAhH,EAAA,IAEPA,IACA,OAMA,OAAAA,EAGA,SAAAiL,EAAAjE,EAAAhH,GACA,GAAAgH,EAAAtE,OAAA1C,EAAA,SAAAgH,EAAAhH,EAAA,UAAAgH,EAAAhH,EAAA,IAEA,IAAAA,GAAA,EAAgBA,EAAAgH,EAAAtE,OAAoB1C,IACpC,SAAAgH,EAAAhH,IAAA,MAAAgH,EAAAhH,EAAA,UAAAgH,EAAAhH,EAAA,IACAA,GAAA,EACA,YAGG,GACHgH,EAAAtE,OAAA1C,EAAA,GACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,GACA,CACA,IAAAkL,EAAA,EACA,IAAAlL,GAAA,EAAgBA,EAAAgH,EAAAtE,OAAoB1C,IACpC,SAAAgH,EAAAhH,GACAkL,SACO,SAAAlE,EAAAhH,IAEP,MADAkL,EAEA,WAIG,GACHlE,EAAAtE,OAAA1C,EAAA,GACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,IACA,MAAAgH,EAAAhH,EAAA,GAEA,IAAAA,GAAA,EAAgBA,EAAAgH,EAAAtE,OAAoB1C,IACpC,SAAAgH,EAAAhH,IAAA,MAAAgH,EAAAhH,EAAA,UAAAgH,EAAAhH,EAAA,IACAA,GAAA,EACA,MAKA,OAAAA,EAnNAR,EAAA+I,SAAA,SAAAvB,EAAA/D,GACAA,EAAAW,EAAAZ,aAAAC,EAAAC,EAAAC,GAMA,MAAA2C,EAAA,GACA,IAAAqF,GAAA,EACA,WAAAnE,EAAA,KAEAA,IAAAO,OAAA,IAEA,MAAA6D,EAAA,IAAA5E,OAAA,oBAAAG,QAAA,SAAA1D,EAAAkC,cACAkG,EAAA,IAAA7E,OAAA,uBAAAG,QAAA,WAAA1D,EAAAkC,cACA,QAAAnF,EAAA,EAAiBA,EAAAgH,EAAAtE,OAAoB1C,IAAA,CACrC,SAAAgH,EAAAhH,GAuGK,CACL,SAAAgH,EAAAhH,IAAA,OAAAgH,EAAAhH,IAAA,OAAAgH,EAAAhH,IAAA,OAAAgH,EAAAhH,GACA,SAEA,OAAc8K,IAAA,CAAMC,KAAA,cAAAC,IAAA,QAAAhE,EAAAhH,GAAA,uBAtGpB,SAAAgH,IADAhH,IAGA,IADAA,EAAA4K,EAAA5D,IAAAhH,IACA8K,IACA,OAAA9K,MAEO,UAAAgH,EAAAhH,GAAA,CACPA,EAAAiL,EAAAjE,EAAAhH,GACA,SACO,CACP,IAAAsL,GAAA,EACA,MAAAtE,EAAAhH,KAEAsL,GAAA,EACAtL,KAGA,IAAAuL,EAAA,GACA,KAEAvL,EAAAgH,EAAAtE,QACA,MAAAsE,EAAAhH,IACA,MAAAgH,EAAAhH,IACA,OAAAgH,EAAAhH,IACA,OAAAgH,EAAAhH,IACA,OAAAgH,EAAAhH,GACAA,IAEAuL,GAAAvE,EAAAhH,GAKA,UAHAuL,IAAA9F,QAGA8F,EAAA7I,OAAA,IAEA6I,IAAAC,UAAA,EAAAD,EAAA7I,OAAA,GACA,SAEA,IAAA+I,EAAAF,EAAAF,GACA,OAAkBP,IAAA,CAAMC,KAAA,aAAAC,IAAA,OAAAO,EAAA,yBAGxB,MAAAG,EAAAC,EAAA3E,EAAAhH,GACA,QAAA0L,EACA,OAAkBZ,IAAA,CAAMC,KAAA,cAAAC,IAAA,kBAAAO,EAAA,qBAExB,IAAA7E,EAAAgF,EAAAzK,MAGA,GAFAjB,EAAA0L,EAAAhI,MAEA,MAAAgD,IAAAhE,OAAA,IAGA,MAAAkJ,EAAAC,EADAnF,IAAA8E,UAAA,EAAA9E,EAAAhE,OAAA,GACAO,EAAAmI,GACA,QAAAQ,EAIA,OAAAA,EAHAT,GAAA,OAKS,GAAAG,EAAA,CACT,GAAA5E,EAAAjB,OAAA/C,OAAA,EACA,OACAoI,IAAA,CAAoBC,KAAA,aAAAC,IAAA,eAAAO,EAAA,gDAET,CACX,MAAAO,EAAAhG,EAAAiG,MACA,GAAAR,IAAAO,EACA,OACAhB,IAAA,CAAsBC,KAAA,aAAAC,IAAA,eAAAc,EAAA,2BAAAP,EAAA,WAIb,CACT,MAAAK,EAAAC,EAAAnF,EAAAzD,EAAAmI,GACA,QAAAQ,EACA,OAAAA,EAEA9F,EAAAnC,KAAA4H,GACAJ,GAAA,EAKA,IAAAnL,IAAiBA,EAAAgH,EAAAtE,OAAoB1C,IACrC,SAAAgH,EAAAhH,GAAA,CACA,SAAAgH,EAAAhH,EAAA,IAGAA,EAAAiL,EAAAjE,IADAhH,GAEA,SAEA,MAIA,MAAAgH,EAAAhH,IACAA,MAWA,OAAAmL,IAEGrF,EAAApD,OAAA,IACH,CACAoI,IAAA,CAAYC,KAAA,aAAAC,IAAA,WAAAgB,KAAAC,UAAAnG,EAAA,QAAAa,QAAA,yBAHZ,CAAYmE,IAAA,CAAMC,KAAA,aAAAC,IAAA,yBAsFlB,IAAAkB,EAAA,IACAC,EAAA,IAOA,SAAAR,EAAA3E,EAAAhH,GACA,IAAA0G,EAAA,GACA0F,EAAA,GACA,KAAQpM,EAAAgH,EAAAtE,OAAoB1C,IAAA,CAC5B,GAAAgH,EAAAhH,KAAAkM,GAAAlF,EAAAhH,KAAAmM,EACA,QAAAC,EACAA,EAAApF,EAAAhH,OACO,IAAAoM,IAAApF,EAAAhH,GAEP,SAEAoM,EAAA,QAEK,SAAApF,EAAAhH,IACL,KAAAoM,EACA,MAGA1F,GAAAM,EAAAhH,GAEA,WAAAoM,GAIA,CAAUnL,MAAAyF,EAAAhD,MAAA1D,GAMV,MAAAqM,EAAA,IAAA7F,OAAA,+DAIA,SAAAqF,EAAAnF,EAAAzD,EAAAmI,GAKA,MAAA5H,EAAAI,EAAAL,cAAAmD,EAAA2F,GACAC,EAAA,GAEA,QAAAtM,EAAA,EAAiBA,EAAAwD,EAAAd,OAAoB1C,IAAA,CAGrC,OAAAwD,EAAAxD,GAAA,GAAA0C,OAEA,OAAcoI,IAAA,CAAMC,KAAA,cAAAC,IAAA,aAAAxH,EAAAxD,GAAA,kCACf,QAAAqD,IAAAG,EAAAxD,GAAA,KAAAiD,EAAA2B,uBAEL,OAAckG,IAAA,CAAMC,KAAA,cAAAC,IAAA,qBAAAxH,EAAAxD,GAAA,wBAKpB,MAAA6G,EAAArD,EAAAxD,GAAA,GACA,IAAAuM,EAAA1F,EAAAuE,GACA,OAAcN,IAAA,CAAMC,KAAA,cAAAC,IAAA,aAAAnE,EAAA,yBAEpB,GAAAyF,EAAAzK,eAAAgF,GAIA,OAAciE,IAAA,CAAMC,KAAA,cAAAC,IAAA,aAAAnE,EAAA,kBAFpByF,EAAAzF,GAAA,EAMA,SAKA,SAAA0F,EAAA1F,EAAAuE,GAEA,OAAAxH,EAAA5B,UAAA6E,EAAAuE,GAMA,SAAAK,EAAA5F,EAAAwF,GAGA,OAAAzH,EAAAN,aAAAuC,EAAAwF,kCC3TA,MAAArI,EAAqBlD,EAAQ,GAAQkD,aAErCE,EAAA,CACAqB,oBAAA,KACAC,cAAA,EACAC,aAAA,QACAC,kBAAA,EACAO,cAAA,EACAC,kBAAA,MACAsH,QAAA,EACA7B,SAAA,KACA8B,kBAAA,EACArH,kBAAA,SAAAvC,GACA,OAAAA,GAEAwC,mBAAA,SAAAxC,GACA,OAAAA,IAIAM,EAAA,CACA,sBACA,eACA,eACA,mBACA,eACA,oBACA,SACA,WACA,mBACA,oBACA,sBAGA,SAAAuJ,EAAAzJ,GACA4F,KAAA5F,QAAAD,EAAAC,EAAAC,EAAAC,GACA0F,KAAA5F,QAAAyB,kBAAAmE,KAAA5F,QAAAuB,aACAqE,KAAA8D,YAAA,WACA,WAGA9D,KAAA+D,cAAA/D,KAAA5F,QAAAsB,oBAAA7B,OACAmG,KAAA8D,eAEA9D,KAAA5F,QAAAgC,aACA4D,KAAAgE,UAEAhE,KAAAgE,QAAA,WACA,UAGAhE,KAAAiE,kBACAjE,KAAAkE,kBAEAlE,KAAA5F,QAAAuJ,QACA3D,KAAAmE,YACAnE,KAAAoE,WAAA,MACApE,KAAAqE,QAAA,OAEArE,KAAAmE,UAAA,WACA,UAEAnE,KAAAoE,WAAA,IACApE,KAAAqE,QAAA,IAGArE,KAAA5F,QAAAwJ,kBACA5D,KAAAsE,cAAAC,EACAvE,KAAAwE,aAAAC,IAEAzE,KAAAsE,cAAAI,EACA1E,KAAAwE,aAAAG,GAGA3E,KAAA0E,mBACA1E,KAAA2E,kBAsFA,SAAAV,EAAA7C,EAAAwD,GAEA,OADAxD,EAAApB,KAAA5F,QAAAmC,kBAAA,GAAA6E,GACA,KAAApB,KAAA5F,QAAAiC,mBAAA,KAAA+E,EACAA,EAAA,YAAAwD,EAAA,KAAA5E,KAAAoE,WAEAhD,EAAAtD,QAAAkC,KAAA5F,QAAAiC,kBAAA,YAAAuI,EAAA,KAAA5E,KAAAoE,YAIA,SAAAF,EAAA9C,EAAAwD,GAEA,GADAxD,EAAApB,KAAA5F,QAAAmC,kBAAA,GAAA6E,GACA,KAAApB,KAAA5F,QAAAiC,mBAAA,KAAA+E,EACA,OAAAA,EAAA,YAAAwD,EAAAC,KAAA,qBAAA7E,KAAAoE,WAEA,QAAA3K,KAAAmL,EACAxD,IAAAtD,QAAAkC,KAAA5F,QAAAiC,kBAAA,YAAAuI,EAAAnL,GAAA,OAEA,OAAA2H,EAAApB,KAAAqE,QAIA,SAAAM,EAAAhI,EAAAjE,EAAAmF,EAAAgE,GACA,OAAAhE,IAAAlB,EAAAiC,SAAA,KAEAoB,KAAAmE,UAAAtC,GACA,IACAnJ,EACAmF,EACA,IACAlB,EAGA,KACAjE,EACAsH,KAAAoE,WAIApE,KAAAmE,UAAAtC,GACA,IACAnJ,EACAmF,EACAmC,KAAAoE,WACAzH,EAEAqD,KAAAmE,UAAAtC,GACA,KACAnJ,EACAsH,KAAAoE,WAKA,SAAAK,EAAA9H,EAAAjE,EAAAmF,EAAAgE,GACA,WAAAlF,EACAqD,KAAA2E,gBAAAhI,EAAAjE,EAAAmF,EAAAgE,GAEA7B,KAAAmE,UAAAtC,GAAA,IAAAnJ,EAAAmF,EAAA,IAAAmC,KAAAoE,WAKA,SAAAM,EAAA/H,EAAAjE,EAAAmF,EAAAgE,GACA,OACA7B,KAAAmE,UAAAtC,GACA,IACAnJ,EACAmF,EACA,IACAmC,KAAA5F,QAAAmC,kBAAAI,GACA,KACAjE,EACAsH,KAAAoE,WAIA,SAAAG,EAAA5H,EAAAjE,EAAAmF,EAAAgE,GACA,WAAAlF,EACAqD,KAAA0E,iBAAA/H,EAAAjE,EAAAmF,EAAAgE,GAEA7B,KAAAmE,UAAAtC,GAAA,IAAAnJ,EAAAmF,EAAA,IAAAmC,KAAAoE,WAIA,SAAAD,EAAAtC,GACA,OAAA7B,KAAA5F,QAAA0H,SAAAgD,OAAAjD,GAGA,SAAAiC,EAAApM,GACA,QAAAA,EAAAqN,WAAA/E,KAAA5F,QAAAsB,sBACAhE,EAAAgH,OAAAsB,KAAA+D,eAMA,SAAAC,EAAAtM,GACA,OAAAA,IAAAsI,KAAA5F,QAAAgC,aApLAyH,EAAA9K,UAAAsG,MAAA,SAAAU,GACA,OAAAC,KAAAgF,IAAAjF,EAAA,GAAApD,KAGAkH,EAAA9K,UAAAiM,IAAA,SAAAjF,EAAA8B,GACA,IAAAhE,EAAA,GACAlB,EAAA,GACA,MAAA/C,EAAA/B,OAAA+B,KAAAmG,GACA9F,EAAAL,EAAAC,OACA,QAAA1C,EAAA,EAAiBA,EAAA8C,EAAS9C,IAAA,CAC1B,MAAAuB,EAAAkB,EAAAzC,GACA,YAAA4I,EAAArH,SAEK,UAAAqH,EAAArH,GACLiE,GAAAqD,KAAAmE,UAAAtC,GAAA,IAAAnJ,EAAA,IAAAsH,KAAAoE,gBACK,GAAArE,EAAArH,aAAAuM,KACLtI,GAAAqD,KAAAsE,cAAAvE,EAAArH,KAAA,GAAAmJ,QACK,oBAAA9B,EAAArH,GAAA,CAEL,MAAAwM,EAAAlF,KAAA8D,YAAApL,GACAwM,EACArH,GAAA,IAAAqH,EAAA,KAAAlF,KAAA5F,QAAAoC,mBAAA,GAAAuD,EAAArH,IAAA,IACOsH,KAAAgE,QAAAtL,GACPqH,EAAAC,KAAA5F,QAAAwB,cACAe,GAAAqD,KAAAiE,gBAAAlE,EAAAC,KAAA5F,QAAAwB,cAAAmE,EAAArH,IAEAiE,GAAAqD,KAAAiE,gBAAA,GAAAlE,EAAArH,IAIAA,IAAAsH,KAAA5F,QAAAwB,aACAmE,EAAAC,KAAA5F,QAAAgC,gBAGAO,GAAAqD,KAAA5F,QAAAmC,kBAAA,GAAAwD,EAAArH,KAGAiE,GAAAqD,KAAAsE,cAAAvE,EAAArH,KAAA,GAAAmJ,QAGK,GAAA5B,MAAAC,QAAAH,EAAArH,IAEL,GAAAsH,KAAAgE,QAAAtL,GACAiE,GAAAqD,KAAAmE,UAAAtC,GACA9B,EAAAC,KAAA5F,QAAAwB,cACAe,GAAAqD,KAAAkE,gBAAAnE,EAAAC,KAAA5F,QAAAwB,cAAAmE,EAAArH,IAEAiE,GAAAqD,KAAAkE,gBAAA,GAAAnE,EAAArH,QAEO,CAEP,MAAAyM,EAAApF,EAAArH,GAAAmB,OACA,QAAAuL,EAAA,EAAuBA,EAAAD,EAAYC,IAAA,CACnC,MAAAC,EAAAtF,EAAArH,GAAA0M,GACA,YAAAC,QAEW,UAAAA,EACX1I,GAAAqD,KAAAmE,UAAAtC,GAAA,IAAAnJ,EAAA,IAAAsH,KAAAoE,gBACW,oBAAAiB,EAAA,CACX,MAAAxC,EAAA7C,KAAAgF,IAAAK,EAAAxD,EAAA,GACAlF,GAAAqD,KAAAwE,aAAA3B,EAAAlG,IAAAjE,EAAAmK,EAAAhF,QAAAgE,QAEAlF,GAAAqD,KAAAsE,cAAAe,EAAA3M,EAAA,GAAAmJ,SAMA,GAAA7B,KAAA5F,QAAAuB,cAAAjD,IAAAsH,KAAA5F,QAAAuB,aAAA,CACA,MAAA2J,EAAAzN,OAAA+B,KAAAmG,EAAArH,IACA6M,EAAAD,EAAAzL,OACA,QAAAuL,EAAA,EAAuBA,EAAAG,EAAOH,IAC9BvH,GAAA,IAAAyH,EAAAF,GAAA,KAAApF,KAAA5F,QAAAoC,mBAAA,GAAAuD,EAAArH,GAAA4M,EAAAF,KAAA,QAEO,CACP,MAAAvC,EAAA7C,KAAAgF,IAAAjF,EAAArH,GAAAmJ,EAAA,GACAlF,GAAAqD,KAAAwE,aAAA3B,EAAAlG,IAAAjE,EAAAmK,EAAAhF,QAAAgE,IAIA,OAAUhE,UAAAlB,QA2GV/F,EAAAD,QAAAkN,gDC3QI2B,EACAC,EAwFEC,EAAU,SAACC,EAAUC,GACzB,IAAM/K,EAAQgL,EAAuBF,GAC/BG,EAAO,CACXC,KAAMH,EAAMG,KACZJ,SAAUA,EACVK,QAASJ,EAAMI,QACfC,QAASL,EAAMK,QACfC,SAAUN,EAAMM,SAChBC,eAAgBP,EAAMO,eACtBC,MAAOC,EAAuBV,GAC9BW,MAAO7K,WAAWmK,EAAMU,OAAOC,QAAQ,IAGrC1L,GAAS,EACX2K,EAAM3K,GAASiL,EAEfN,EAAM1K,KAAKgL,IASTO,EAAyB,SAACV,GAC9B,IAAIS,EAAQ,gCAUZ,MARiB,YAAbT,IACFS,EAAQ,0BAGO,gBAAbT,IACFS,EAAQ,wCAGHA,GAeHP,EAAyB,SAACF,GAC9B,IAAK,IAAI9K,KAAS2K,EAChB,GAAIA,EAAM3K,GAAO8K,WAAaA,EAC5B,OAAO9K,EAIX,OAAQ,GAQJ2L,EAAmB,SAACC,EAAWC,GACnCjB,EAAgBhK,WAAWgL,EAAYC,GAAYH,QAAQ,IAQvDI,EAAqB,SAACT,GAC1B,MAAiB,OAAbA,EACK,aAGFA,GAQHU,EAAY,SAACpB,GACjB,OAAOA,EAAMqB,KAAK,SAAC7M,EAAG8M,GACpB,OAAQ9M,EAAE2L,SAAWmB,EAAEnB,UAAY,EAAK3L,EAAE2L,SAAWmB,EAAEnB,SAAW,EAAI,KAUpEoB,EAAwB,SAACL,EAAYJ,GACzC,OAAII,EAAaJ,EAAQ7K,WAAW,OAC3B,QAGLiL,EAAaJ,EAAQ7K,WAAW,OAC3B,SAGF,QASHuL,EAA4B,SAACC,EAAMrB,GACvC,IAAMsB,EAAWD,EAAKE,MAAQvB,EAAMuB,IAC9BC,EAAcxB,EAAMyB,OAASJ,EAAKI,OAClCC,EAAgBL,EAAKM,WAAa3B,EAAM2B,SAE9C,OAAIH,GAAeF,GAAYI,EACtB,QAGLnE,KAAKC,UAAU6D,KAAU9D,KAAKC,UAAUwC,GACnC,OAGF,UC1NL4B,EAAQ,GAENnN,EAAiB,CACrBoN,UAAW,kBACXC,SAAU,0GAmCNC,EAAM,SAACC,GACXJ,EAAQ3P,OAAOgQ,OAAO,GAAIL,EAAOI,IA0B7BE,EAAoB,SAACtC,GACzB,OAAIA,EAAM3L,OAAS,EACV,EAGF,GAQHkO,EAAmB,SAACvC,GACxB,OAAqB,IAAjBA,EAAM3L,OACD,GAEY,IAAjB2L,EAAM3L,OACD,GAEY,IAAjB2L,EAAM3L,OACD,GAGF,IAGMmO,EAAA,CACbhQ,IA/DU,WACV,OAAOwP,GA+DPG,MACAM,KArFW,SAAC7N,GACZ,IAAM8N,EAAWrQ,OAAOgQ,OAAO,GAAIxN,EAAgBD,GAEnDuN,EAAI,CACFnC,MAAO,GACP2C,QAAS,GACTC,YAAY,EACZC,aAAa,EACbC,eAAgB,EAChBC,cAAe,EACf9C,cAAe,IACf+C,KAAMN,EAASM,KACfd,SAAUQ,EAASR,SACnBD,UAAWgB,SAASC,cAAcR,EAAST,cAyE7CkB,UAlDgB,SAACC,GDmFjBpD,EAAQ,GChFR,IAAMA,EDnCgB,SAAC2C,EAASS,GAYhC,IAXA,IAAMnC,EAAYhL,WAAWmN,EAAatC,OACtCuC,EAAgBpN,WAAWmN,EAAavB,QACxCyB,EAAcrC,EACdsC,EAAYtC,EACZuC,EAAsBvC,EACpBwC,EAAgB,CACpB9B,IAAKyB,EAAazB,IAClBI,SAAUqB,EAAarB,SACvBF,OAAQwB,GAGD1R,EAAI,EAAGA,EAAIgR,EAAQtO,OAAQ1C,IAAK,CACvC,IAAMyO,EAAQuC,EAAQhR,GAChBuP,EAAajL,WAAWmK,EAAMU,OAC9B4C,EAAczN,WAAWmK,EAAMyB,QAC/B8B,EAAgBxC,EAAmBf,EAAMM,UACzCkD,EAAiB,CACrBjC,IAAKvB,EAAMuB,IACXI,SAAU3B,EAAM2B,SAChBF,OAAQ6B,GAEJG,EAAYrC,EAA0BiC,EAAeG,GAGzDD,IAAkBP,EAAa1C,UAChB,SAAdmD,GAAsC,WAAdA,GACkC,WAA3DtC,EAAsBL,EAAYsC,GAUlCG,IAAkBP,EAAa1C,UAChB,SAAdmD,GAAsC,WAAdA,GACwB,WAAjDtC,EAAsBL,EAAYqC,GAUpB,WAAdM,GACiD,SAAjDtC,EAAsBL,EAAYD,IAClCyC,GAAeL,IAGfnD,EAAQ,cAAeE,GACvBiD,EAAgBK,EAChBJ,EAAcA,EAAcpC,EAAaA,EAAaoC,IAdtDpD,EAAQ,UAAWE,GACnBmD,EAAYrC,EACZoC,EAAcA,EAAcpC,EAAaA,EAAaoC,IAdtDpD,EAAQ,aAAcE,GACtBoD,EAAsBtC,EACtBoC,EAAcA,EAAcpC,EAAaA,EAAaoC,GAgC1D,MAJsD,WAAlD/B,EAAsB+B,EAAarC,IACrCD,EAAiBC,EAAWqC,GAGvBlC,EAAUpB,GC7BH8D,CAAS9B,EAAMW,QAASS,GAEtCjB,EAAI,CACFnC,MAAOA,EACP4C,YAAY,EACZ3C,cDjDKA,ECkDL6C,eAAgBR,EAAkBtC,GAClC+C,cAAeR,EAAiBvC,mQCnDpC,IAeM+D,EAA2B,SAACC,GAChCC,WAAW,WAC0B,IAA/BjC,EAAMxP,MAAMmQ,QAAQtO,QACtB2N,EAAMG,IAAI,CAAEQ,QAASuB,EAAUC,KAGjCH,KACC,MAMCI,EAAa,WACjB,IACE,IAAMC,EAAU,IAAIC,eAEpBD,EAAQE,KAAK,MAAOvC,EAAMxP,MAAM0P,UAAU,GAC1CmC,EAAQG,QAAU,KAClBH,EAAQI,mBAAqB,WAC3B,GAA2B,IAAvBJ,EAAQK,YAAuC,MAAnBL,EAAQM,QAAkBN,EAAQO,SAAU,CAC1E,IAAMC,EAAOC,IAAUjL,MAAMwK,EAAQO,UACrC5C,EAAMG,IAAI,CAAEQ,QAASuB,EAAUW,OAGnCR,EAAQU,OACR,MAAOC,MAQLd,EAAY,SAACW,GACjB,IAAII,EAAQ,GAkBZ,OAhBIJ,GAAQA,EAAKK,YAAiD,WAAnCC,EAAON,EAAKK,WAAW1E,UACpDqE,EAAKK,WAAW1E,QAAQ4E,QAAQ,SAAC5E,GAC/ByE,EAAM3P,KAAK,CACTiL,KAAMC,EAAQD,KACdC,QAASA,EAAQA,QACjBC,QAASD,EAAQC,QACjBkB,IAA+B,OAA1BnB,EAAQ6E,gBAA0B,EACvC1E,eAAgBH,EAAQ8E,aACxBvD,SAAqC,SAA3BvB,EAAQ+E,iBAA6B,EAC/CzE,MAAON,EAAQgF,QAAQlN,QAAQ,IAAK,KACpCoI,SAAUF,EAAQE,SAAS+E,cAC3B5D,OAAQrB,EAAQkF,iBAAiBpN,QAAQ,KAAM,IAAIlB,WAKlD6N,GAGMU,EAvEI,WACjB,OAAO,IAAIC,QAAQ,SAAU5B,EAAS6B,GAChC7D,EAAMxP,MAAMoQ,WACdoB,KAGFI,IACAL,EAAyBC,OCTd,IAAA8B,EANf,WACA,+BAAAvU,QACA,8BAAAA,QACA,sBAAAA,OAAAwU,0BAAAxS,WCkBe,IAAAyS,EArBf,SAAAC,GACA,IAAAC,EAAA,CACAC,IAAA,EACAC,MAAA,EACAC,OAAA,EACAC,KAAA,GAEA,OAAAL,GAGA,iBAAAA,GACAC,EAAAC,IAAAF,EAAAE,KAAA,EACAD,EAAAE,MAAAH,EAAAG,OAAA,EACAF,EAAAG,OAAAJ,EAAAI,QAAA,EACAH,EAAAI,KAAAL,EAAAK,MAAA,GAEAJ,EAAAG,OAAAJ,EAEAC,GAVAA,GCiFe,IAAAK,EAtFf,SAAAhS,EAAAiS,EAAAC,EAAAR,EAAAS,GACA,IAAAD,IAAAC,EACA,OAEA,IAAAC,EACAC,EACAC,GAAA,EACAC,GAAA,EACA,MAAAZ,EAAkBF,EAAUC,GAE5Bc,EAAA,WACA,GAAAL,GAAAI,EACA,IACAJ,IACO,MAAAjK,GACPuK,QAAAC,MAAAxK,GAGAqK,GAAA,GAGAI,EAAA,SAAAC,GACA,GAAAV,IAAAK,EAAA,CACA,IACAL,IACO,MAAAhK,GACPuK,QAAAC,MAAAxK,GAEA+J,GACAY,EAAAD,GAGAL,GAAA,GAGAM,EAAA,SAAAD,GACQrB,IACRa,EAAAU,UAAAF,EAAA5S,QAEAhD,OAAA+V,oBAAA,SAAAC,EAAA,CAA4DC,SAAA,EAAAC,SAAA,KAI5DC,EAAA,WAEA,IAAAC,GADAf,EAAArS,EAAAqT,yBACAzB,KAAA5U,OAAAsW,YAAA3B,EAAAG,OACAyB,EAAAlB,EAAAP,OAAAH,EAAAG,QAAA,EACAsB,GAAAG,EACAZ,IAEAH,IAEAF,GAAA,GAGAU,EAAA,WACA,GAAAV,EACA,SAEAtV,OAAAwW,uBACAxW,OAAAwW,sBAAAL,GACAb,GAAA,GAEAa,KAIA,GAAM5B,IAAmB,CACzB,MAAAkC,EAAA,CACAC,WAAA/B,EAAAC,IAAA,MAAAD,EAAAE,MAAA,MAAAF,EAAAG,OAAA,MAAAH,EAAAI,KAAA,OAEAK,EAAA,IAAAuB,qBAAA,SAAAC,GACAA,EAAA/C,QAAA,SAAA+B,GACAA,EAAAiB,eACAlB,EAAAC,GAEAJ,OAGKiB,IACLK,QAAA9T,QAEAhD,OAAA+W,iBAAA,SAAAf,EAAA,CAAuDC,SAAA,EAAAC,SAAA,KCjExC,IAAAc,EARL,SAAAhU,EAAAkS,EAAAR,EAAAS,GACRH,EAAUhS,GAAA,EAAAkS,EAAAR,EAAAS,ICVR8B,GAA6B,EAC3BC,EAAalX,OAAOmX,SAASC,KAC7BC,EAAgB,6BAkETC,EAA+B,SAACC,QAChB,IAAhBvX,OAAOwX,MAIlBD,EAAaR,iBAAiB,SAAU,WACtCU,EAAmCF,GACnCG,OAOEA,EAA4B,WAChC,IAAIT,EAAJ,CAIA,IACEjX,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAa,UACbX,WAAYA,EACZY,SAAU,IAEZ,MAAOrE,IAETwD,GAA6B,IAOzBQ,EAAqC,SAArCA,EAAsCF,GAC1CA,EAAaxB,oBAAoB,SAAU,WACzC0B,EAAmCF,GACnCG,OCrEWK,EAnCK,WAClB,IAAMrH,EAAYD,EAAMxP,MAAMyP,UAAUiB,cAAc,sCAEpC,OAAdjB,IAI6B,IAA7BD,EAAMxP,MAAMwN,MAAM3L,OACpB4N,EAAUsH,UAAV,IAEAtH,EAAUsH,UAAV,sEAAAC,OAEMxH,EAAMxP,MAAMwN,MAAMyJ,IAAI,SAACnJ,EAAMjL,GAAP,MAAiB,uKAAAmU,OAGKlJ,EAAKM,MAHV,yBAAA4I,OAIjClJ,EAAKK,eAAL,mCAAA6I,OACgBlJ,EAAKK,eADrB,sBAAA6I,OACwDlJ,EAAKE,QAD7D,wDAAAgJ,OAGOlJ,EAAKE,QAHZ,0BAJiC,+HAAAgJ,OAWkBlJ,EAAKQ,MAXvB,gHAAA0I,OAYoDlJ,EAAKC,KAZzD,oFAevCnJ,SAAQiI,KAAK,IAjBnB,uBDqGsC,WACxC,QAA2B,IAAhB9N,OAAOwX,KAAlB,CAIA,IAAMW,EAAQ1H,EAAMxP,MAAMyP,UAAU0H,iBAAiB,+CAChC,IAAjBD,EAAMrV,QAIVqV,EAAMtE,QAAQ,SAAC7E,EAAMlL,GACnBkL,EAAK+H,iBAAiB,QAAS,WAC7B,IACE/W,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAW,gBAAAI,OAAkBnU,EAAQ,EAA1B,YACXoT,WAAYA,EACZmB,SAAU,IAEZ,MAAO5E,UCpGX6E,MCeEC,EAAqB,WACzB,IAAIC,EAAU,CACZC,aAAc,WACdC,eAAgB,mBAChBC,cAAe,yBASjB,OANmC,IAA/BlI,EAAMxP,MAAMsQ,iBACdiH,EAAQC,aAAe,MACvBD,EAAQE,eAAiB,iBACzBF,EAAQG,cAAgB,0BAGnBH,GAOHI,EAA2B,SAACC,GAChC,IAAMC,EAAcrI,EAAMxP,MAAMyP,UAAUiB,cAAc,6CAEpC,OAAhBmH,GAIJpG,WAAW,WACToG,EAAYC,MAAMC,MAAlB,GAAAf,OAA6BY,EAA7B,MACC,MAMCI,EAAoB,WACxB,IAAMC,EAAYzI,EAAMxP,MAAMyP,UAAUiB,cAAc,2CAEpC,OAAduH,GAIJxG,WAAW,WACTwG,EAAUC,UAAUC,IAAI,UACvB,MAMCC,EAAyB,WAC7B,IAAMC,EAAa7I,EAAMxP,MAAMyP,UAAUiB,cAAc,2CAEpC,OAAf2H,GAIJA,EAAWvC,iBAAiB,QAAS,WACnC,IAAMwC,EAAY9I,EAAMxP,MAAMyP,UAAUiB,cAAc,sCAChD6H,EAAQ/I,EAAMxP,MAAMyP,UAAUiB,cAAc,4CAEhC,OAAd4H,GAAgC,OAAVC,KAIS,IC3EV,SAACA,GAE5B,MADc,eACDC,KAAKD,GDyEZE,CAAcF,EAAMnY,QAKxBkY,EAAUvB,UAAV,oMACAvH,EAAMG,IAAI,CAAEU,aAAa,IFyCJ,WACvB,QAA2B,IAAhBtR,OAAOwX,KAIlB,IACExX,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAa,qBACbX,WAAYA,IAEd,MAAOzD,KEpDP6E,IANEkB,EAAMG,cAAcR,UAAUC,IAAI,iBAUzBQ,EAzHM,WACnB,IAAMpB,EAAUD,IACV7H,EAAYD,EAAMxP,MAAMyP,UAAUiB,cAAc,uCAElDjB,IACFA,EAAUsH,UAAV,uJAAAC,OAI8CO,EAAQG,cAJtD,kGAAAV,OAK0CO,EAAQE,eALlD,sEAAAT,OAOmC,IAA/BxH,EAAMxP,MAAMsQ,eAAZ,uCAAA0G,OAC4BO,EAAQC,aADpC,MAAAR,OACqDxH,EAAMxP,MAAMyN,cAAZ,aAAAuJ,OAAyCxH,EAAMxP,MAAMyN,cAAc3H,QAAQ,IAAK,KAAhF,0BADrD,wLAAAkR,QAK8B,IAA5BxH,EAAMxP,MAAMqQ,YAAZ,4mBALF,YAPJ,UA6BAsH,EAAyBnI,EAAMxP,MAAMuQ,eACrCyH,IACAI,IFuGkB,SAACZ,GACrB,QAA2B,IAAhBzY,OAAOwX,KAIlB,IACExX,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAW,oBAAAI,OAAsBQ,GACjCvB,WAAYA,IAEd,MAAOzD,KElHP6E,CAAaE,EAAQC,gBEzBZoB,EAAmB,WAC9B,IAbMC,EAaApJ,EAAYD,EAAMxP,MAAMyP,UAAUiB,cAAc,2CAElDjB,IACFA,EAAUsH,UAAV,mVAAAC,QAhBI6B,EAAQ,CACZ,oEACA,mHACA,mGAGWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMhX,SAU5C,0ECLJ,IAkBMoX,EAAqB,WACzB,IAAMC,EAAc1J,EAAMxP,MAAMyP,UAAUiB,cAAc,sCAEpC,OAAhBwI,GAIJA,EAAYpD,iBAAiB,QAAS,WACpCqD,OAOEC,EAAqB,WACzB3I,SAAS4I,UAAY,SAAC7G,GACF,KAAdA,EAAE8G,SACJH,MAQAA,EAAqB,WACzB,ICsBMI,EDtBA3I,EFzD4B,WAKlC,IAJA,IAAI6D,GAAQ,EACR7D,EAAe,GACb4I,EAAgBhK,EAAMxP,MAAMyP,UAAU0H,iBAAiB,8CAEpDhY,EAAI,EAAGA,EAAIqa,EAAc3X,OAAQ1C,IAAK,CAC7C,IAAMmX,EAAekD,EAAcra,GAC7BO,EAAO4W,EAAamD,QAAQ/Z,KACjB4W,EAAamD,QAAQC,UAEC,KAAvBpD,EAAalW,OAC3BqU,GAAQ,EACR6B,EAAaoC,cAAcR,UAAUC,IAAI,cAEzC7B,EAAaoC,cAAcR,UAAUyB,OAAO,aAGpB,aAAtBrD,EAAasD,KACfhJ,EAAalR,GAAQ4W,EAAauD,QAElCjJ,EAAalR,GAAQ4W,EAAalW,MAItC,OAAIqU,EACK,GAGF7D,EE6BckJ,ILXS,WAC9B,QAA2B,IAAhB/a,OAAOwX,KAIlB,IACExX,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAa,uBACbX,WAAYA,EACZ8D,SAAU,IAEZ,MAAOvH,KKAT6E,GACyC,IAArCxX,OAAO+B,KAAKgP,GAAc/O,UAI9B+W,ICiBiB,QAFXW,EAAW/J,EAAMxP,MAAMyP,UAAUiB,cAAc,2CAMrD6I,EAASrB,UAAUC,IAAI,QDnBvBhF,IAAa6G,KAAK,WAChBxK,EAAMmB,UAAUC,KACfoJ,KAAK,WDlCsB,IACxBC,KAAazK,EAAMxP,MAAMyP,UAAUiB,cAAc,6CAGrDuJ,EAAWN,SCgCXhB,IACA7B,QAOSoD,EAA8B,WAGzC,IAFA,IAAMV,EAAgBhK,EAAMxP,MAAMyP,UAAU0H,iBAAiB,8CAEpDhY,EAAI,EAAGA,EAAIqa,EAAc3X,OAAQ1C,IAAK,CAC7C,IAAMmX,EAAekD,EAAcra,GAEnCgb,EAAyB7D,GACzBe,EAAmCf,KAQjC6D,EAA2B,SAAC7D,GAChCA,EAAaR,iBAAiB,QAAS,WC7BX,IACtByD,ED6BA/J,EAAMxP,MAAMoQ,YC3BD,QAFXmJ,EAAW/J,EAAMxP,MAAMyP,UAAUiB,cAAc,2CAMrD6I,EAASrB,UAAUyB,OAAO,WD6Bb1J,UAzFF,SAAC7N,GACZoN,EAAMS,KAAK7N,GAEmB,OAA1BoN,EAAMxP,MAAMyP,YCfhBD,EAAMxP,MAAMyP,UAAUsH,UAAtB,kLAAAC,OAIQxH,EAAMxP,MAAMwQ,KAAZ,qDAAAwG,OACwCxH,EAAMxP,MAAMwQ,KADpD,0BAJR,wqFDoBAyI,IACAG,IACAc,ILlBmB,WACnB,QAA2B,IAAhBnb,OAAOwX,KAIlB,IACExX,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAa,QACbX,WAAYA,EACZmE,gBAAgB,EAChBC,SAAU,IAEZ,MAAO7H,KKKT6E,QLE2B,IAAhBtY,OAAOwX,MAIlB+D,EAAc9K,EAAMxP,MAAMyP,UAAW,WACnC,IACE1Q,OAAOwX,KAAKG,KAAK,eAAgB,CAC/BC,QAAS,QACTP,cAAeA,EACfQ,YAAa,UACbX,WAAYA,EACZmE,gBAAgB,EAChBG,SAAU,IAEZ,MAAO/H","file":"smb-phone-plan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"smbPhonePlan\"] = factory();\n\telse\n\t\troot[\"smbPhonePlan\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst doesMatch = function(string, regex) {\n  const match = regex.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nconst doesNotMatch = function(string, regex) {\n  return !doesMatch(string, regex);\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      target[keys[i]] = a[keys[i]];\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\nexports.doesMatch = doesMatch;\nexports.doesNotMatch = doesNotMatch;\nexports.getAllMatches = getAllMatches;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst TagType = {OPENING: 1, CLOSING: 2, SELF: 3, CDATA: 4};\nlet regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|(([\\\\w:\\\\-._]*:)?([\\\\w:\\\\-._]+))([^>]*)>|((\\\\/)(([\\\\w:\\\\-._]*:)?([\\\\w:\\\\-._]+))\\\\s*>))([^<]*)';\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  localeRange: '',\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'localeRange',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\nconst getTraversalObj = function(xmlData, options) {\n  options = buildOptions(options, defaultOptions, props);\n  //xmlData = xmlData.replace(/\\r?\\n/g, \" \");//make it single line\n  xmlData = xmlData.replace(/<!--[\\s\\S]*?-->/g, ''); //Remove  comments\n\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n\n  regx = regx.replace(/\\[\\\\w/g, '[' + options.localeRange + '\\\\w');\n  const tagsRegx = new RegExp(regx, 'g');\n  let tag = tagsRegx.exec(xmlData);\n  let nextTag = tagsRegx.exec(xmlData);\n  while (tag) {\n    const tagType = checkForTagType(tag);\n\n    if (tagType === TagType.CLOSING) {\n      //add parsed data to parent node\n      if (currentNode.parent && tag[14]) {\n        currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue(tag[14], options);\n      }\n      if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n        currentNode.child = []\n        if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n        currentNode.val = xmlData.substr(currentNode.startIndex + 1, tag.index - currentNode.startIndex - 1)\n      }\n      currentNode = currentNode.parent;\n    } else if (tagType === TagType.CDATA) {\n      if (options.cdataTagName) {\n        //add cdata node\n        const childNode = new xmlNode(options.cdataTagName, currentNode, tag[3]);\n        childNode.attrsMap = buildAttributesMap(tag[8], options);\n        currentNode.addChild(childNode);\n        //for backtracking\n        currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n        //add rest value to parent node\n        if (tag[14]) {\n          currentNode.val += processTagValue(tag[14], options);\n        }\n      } else {\n        currentNode.val = (currentNode.val || '') + (tag[3] || '') + processTagValue(tag[14], options);\n      }\n    } else if (tagType === TagType.SELF) {\n      if (currentNode && tag[14]) {\n        currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tag[14], options);\n      }\n\n      const childNode = new xmlNode(options.ignoreNameSpace ? tag[7] : tag[5], currentNode, '');\n      if (tag[8] && tag[8].length > 0) {\n        tag[8] = tag[8].substr(0, tag[8].length - 1);\n      }\n      childNode.attrsMap = buildAttributesMap(tag[8], options);\n      currentNode.addChild(childNode);\n    } else {\n      //TagType.OPENING\n      const childNode = new xmlNode(\n        options.ignoreNameSpace ? tag[7] : tag[5],\n        currentNode,\n        processTagValue(tag[14], options)\n      );\n      if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n        childNode.startIndex=tag.index + tag[1].length\n      }\n      childNode.attrsMap = buildAttributesMap(tag[8], options);\n      currentNode.addChild(childNode);\n      currentNode = childNode;\n    }\n\n    tag = nextTag;\n    nextTag = tagsRegx.exec(xmlData);\n  }\n\n  return xmlObj;\n};\n\nfunction processTagValue(val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction checkForTagType(match) {\n  if (match[4] === ']]>') {\n    return TagType.CDATA;\n  } else if (match[10] === '/') {\n    return TagType.CLOSING;\n  } else if (typeof match[8] !== 'undefined' && match[8].substr(match[8].length - 1) === '/') {\n    return TagType.SELF;\n  } else {\n    return TagType.OPENING;\n  }\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4]);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nexports.parse = function(xmlData, options) {\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  return nodeToJson.convertToJson(xmlToNodeobj.getTraversalObj(xmlData, options), options);\n};\nexports.convertTonimn = require('../src/nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = require('./validator').validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options) {\n  const jObj = {};\n\n  //when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    //otherwise create a textnode if node has some text\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj[options.textNodeName] = node.val;\n      }\n    }\n  }\n\n  util.merge(jObj, node.attrsMap);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj[tagname] = [];\n      for (var tag in node.child[tagname]) {\n        jObj[tagname].push(convertToJson(node.child[tagname][tag], options));\n      }\n    } else {\n      jObj[tagname] = convertToJson(node.child[tagname][0], options);\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  localeRange: 'a-zA-Z',\n};\n\nconst props = ['allowBooleanAttributes', 'localeRange'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function(xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n\n  const tags = [];\n  let tagFound = false;\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  const regxAttrName = new RegExp('^[_w][\\\\w\\\\-.:]*$'.replace('_w', '_' + options.localeRange));\n  const regxTagName = new RegExp('^([w]|_)[\\\\w.\\\\-_:]*'.replace('([w', '([' + options.localeRange));\n  for (let i = 0; i < xmlData.length; i++) {\n    if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      if (xmlData[i] === '?') {\n        i = readPI(xmlData, ++i);\n        if (i.err) {\n          return i;\n        }\n      } else if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (\n          ;\n          i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r';\n          i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          continue;\n        }\n        if (!validateTagName(tagName, regxTagName)) {\n          return {err: {code: 'InvalidTag', msg: 'Tag ' + tagName + ' is an invalid name.'}};\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return {err: {code: 'InvalidAttr', msg: 'Attributes for ' + tagName + ' have open quote'}};\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options, regxAttrName);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            return isValid;\n          }\n        } else if (closingTag) {\n          if (attrStr.trim().length > 0) {\n            return {\n              err: {code: 'InvalidTag', msg: 'closing tag ' + tagName + \" can't have attributes or invalid starting.\"},\n            };\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return {\n                err: {code: 'InvalidTag', msg: 'closing tag ' + otg + ' is expected inplace of ' + tagName + '.'},\n              };\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options, regxAttrName);\n          if (isValid !== true) {\n            return isValid;\n          }\n          tags.push(tagName);\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else {\n              break;\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return {err: {code: 'InvalidChar', msg: 'char ' + xmlData[i] + ' is not expected .'}};\n    }\n  }\n\n  if (!tagFound) {\n    return {err: {code: 'InvalidXml', msg: 'Start tag expected.'}};\n  } else if (tags.length > 0) {\n    return {\n      err: {code: 'InvalidXml', msg: 'Invalid ' + JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '') + ' found.'},\n    };\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return {err: {code: 'InvalidXml', msg: 'XML declaration allowed only at the start of the document.'}};\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {value: attrStr, index: i};\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options, regxAttrName) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    //console.log(matches[i]);\n\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return {err: {code: 'InvalidAttr', msg: 'attribute ' + matches[i][2] + ' has no space in starting.'}};\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return {err: {code: 'InvalidAttr', msg: 'boolean attribute ' + matches[i][2] + ' is not allowed.'}};\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName, regxAttrName)) {\n      return {err: {code: 'InvalidAttr', msg: 'attribute ' + attrName + ' is an invalid name.'}};\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return {err: {code: 'InvalidAttr', msg: 'attribute ' + attrName + ' is repeated.'}};\n    }\n  }\n\n  return true;\n}\n\n// const validAttrRegxp = /^[_a-zA-Z][\\w\\-.:]*$/;\n\nfunction validateAttrName(attrName, regxAttrName) {\n  // const validAttrRegxp = new RegExp(regxAttrName);\n  return util.doesMatch(attrName, regxAttrName);\n}\n\n//const startsWithXML = new RegExp(\"^[Xx][Mm][Ll]\");\n//  startsWith = /^([a-zA-Z]|_)[\\w.\\-_:]*/;\n\nfunction validateTagName(tagname, regxTagName) {\n  /*if(util.doesMatch(tagname,startsWithXML)) return false;\n    else*/\n  return !util.doesNotMatch(tagname, regxTagName);\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","let deals\nlet priceDiffence\n\n/**\n * return the difference of user input price and the lowest price from XML data\n * @returns {*}\n */\nexport const getPriceDiffence = () => {\n  return priceDiffence\n}\n\n/**\n * return matching deals by calculating user inputs\n * @param tariffs\n * @param formularData\n * @returns {*}\n */\nexport const getDeals = (tariffs, formularData) => {\n  const userPrice = parseFloat(formularData.price)\n  let currentVolume = parseFloat(formularData.volume)\n  let lowestPrice = userPrice\n  let bestPrice = userPrice\n  let bestPriceByProvider = userPrice\n  const userCondition = {\n    lte: formularData.lte,\n    flatrate: formularData.flatrate,\n    volume: currentVolume,\n  }\n\n  for (let i = 0; i < tariffs.length; i++) {\n    const tarif = tariffs[i]\n    const tarifPrice = parseFloat(tarif.price)\n    const tarifVolume = parseFloat(tarif.volume)\n    const tarifProvider = getProviderMapping(tarif.provider)\n    const tarifCondition = {\n      lte: tarif.lte,\n      flatrate: tarif.flatrate,\n      volume: tarifVolume,\n    }\n    const condition = getTarifConditionCategory(userCondition, tarifCondition)\n\n    const sameProviderSameConditionBetterPrice =\n      tarifProvider === formularData.provider &&\n      (condition === 'same' || condition === 'better') &&\n      getTarifPriceCategory(tarifPrice, bestPriceByProvider) === 'better'\n\n    if (sameProviderSameConditionBetterPrice) {\n      setDeal('1:provider', tarif)\n      bestPriceByProvider = tarifPrice\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n      continue\n    }\n\n    const differentProviderSameConditionBetterPrice =\n      tarifProvider !== formularData.provider &&\n      (condition === 'same' || condition === 'better') &&\n      getTarifPriceCategory(tarifPrice, bestPrice) === 'better'\n\n    if (differentProviderSameConditionBetterPrice) {\n      setDeal('2:price', tarif)\n      bestPrice = tarifPrice\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n      continue\n    }\n\n    const betterConditionSamePrice =\n      condition === 'better' &&\n      getTarifPriceCategory(tarifPrice, userPrice) === 'same' &&\n      tarifVolume >= currentVolume\n\n    if (betterConditionSamePrice) {\n      setDeal('3:condition', tarif)\n      currentVolume = tarifVolume\n      lowestPrice = lowestPrice > tarifPrice ? tarifPrice : lowestPrice\n    }\n  }\n\n  if (getTarifPriceCategory(lowestPrice, userPrice) === 'better') {\n    setPriceDiffence(userPrice, lowestPrice)\n  }\n\n  return sortDeals(deals)\n}\n\n/**\n * add/update matching deals\n * @param category\n * @param tarif\n */\nconst setDeal = (category, tarif) => {\n  const index = getDealIndexByCategory(category)\n  const deal = {\n    link: tarif.link,\n    category: category,\n    product: tarif.product,\n    company: tarif.company,\n    provider: tarif.provider,\n    productInfoUrl: tarif.productInfoUrl,\n    title: getTitleByDealCategory(category),\n    price: parseFloat(tarif.price).toFixed(2),\n  }\n\n  if (index > -1) {\n    deals[index] = deal\n  } else {\n    deals.push(deal)\n  }\n}\n\n/**\n * return title of the deal\n * @param category\n * @returns string\n */\nconst getTitleByDealCategory = (category) => {\n  let title = 'Bester Preis im gleichen Netz'\n\n  if (category === '2:price') {\n    title = 'Günstigste Alternative'\n  }\n\n  if (category === '3:condition') {\n    title = 'Bessere Konditionen zum selben Preis'\n  }\n\n  return title\n}\n\n/**\n * reset deals before each result calculation\n */\nexport const resetDeals = () => {\n  deals = []\n}\n\n/**\n * check if deal is already in deals\n * @param category\n * @returns {string|number}\n */\nconst getDealIndexByCategory = (category) => {\n  for (let index in deals) {\n    if (deals[index].category === category) {\n      return index\n    }\n  }\n\n  return -1\n}\n\n/**\n * calculate difference of user input price and price from XML data\n * @param userPrice\n * @param tarifPrice\n */\nconst setPriceDiffence = (userPrice, tarifPrice) => {\n  priceDiffence = parseFloat(userPrice - tarifPrice).toFixed(2)\n}\n\n/**\n * mapping for o2/telefónica\n * @param provider\n * @returns {string|*}\n */\nconst getProviderMapping = (provider) => {\n  if (provider === 'o2') {\n    return 'telefónica'\n  }\n\n  return provider\n}\n\n/**\n * sort deals by category\n * @param deals\n * @returns {*}\n */\nconst sortDeals = (deals) => {\n  return deals.sort((a, b) => {\n    return (a.category < b.category ? -1 : (a.category > b.category ? 1 : 0))\n  })\n}\n\n/**\n * calculate if tarif's price is better then the current price, with a tolerance limit\n * @param tarifPrice\n * @param price\n * @returns {string}\n */\nconst getTarifPriceCategory = (tarifPrice, price) => {\n  if (tarifPrice > price + parseFloat('0.1')) {\n    return 'worse'\n  }\n\n  if (tarifPrice < price - parseFloat('0.1')) {\n    return 'better'\n  }\n\n  return 'same'\n}\n\n/**\n * calculate if tarif's condition is better then user's condition\n * @param user\n * @param tarif\n * @returns {string}\n */\nconst getTarifConditionCategory = (user, tarif) => {\n  const worseLte = user.lte && !tarif.lte\n  const worseVolume = tarif.volume < user.volume\n  const worseFlatrate = user.flatrate && !tarif.flatrate\n\n  if (worseVolume || worseLte || worseFlatrate) {\n    return 'worse'\n  }\n\n  if (JSON.stringify(user) === JSON.stringify(tarif)) {\n    return 'same'\n  }\n\n  return 'better'\n}\n","import { getDeals, resetDeals, getPriceDiffence } from '../store/deals.js'\n\nlet store = {}\n\nconst defaultOptions = {\n  container: '#smb-phone-plan',\n  endpoint: 'https://tools.communicationads.net/webservice.php?wf=10506&format=xml&calc=handytarif&country=DE&c=200',\n}\n\n/**\n * init store with default options\n * @param options\n */\nconst init = (options) => {\n  const settings = Object.assign({}, defaultOptions, options)\n\n  set({\n    deals: [],\n    tariffs: [],\n    calculated: false,\n    emailSended: false,\n    resultCategory: 0, // 0 = bad, 1 = good\n    resultPercent: 0, // width of progress-bar\n    priceDiffence: '0', // how much more € user is paying\n    logo: settings.logo,\n    endpoint: settings.endpoint,\n    container: document.querySelector(settings.container),\n  })\n}\n\n/**\n * return store object\n */\nconst get = () => {\n  return store\n}\n\n/**\n * set store\n * @param action\n */\nconst set = (action) => {\n  store = Object.assign({}, store, action)\n}\n\n/**\n * calculate user result and get matching deals\n * @param formularData\n */\nconst setResult = (formularData) => {\n  resetDeals()\n\n  const deals = getDeals(store.tariffs, formularData)\n\n  set({\n    deals: deals,\n    calculated: true,\n    priceDiffence: getPriceDiffence(),\n    resultCategory: getResultCategory(deals),\n    resultPercent: getResultPercent(deals),\n  })\n}\n\n/**\n * calculate user result category by the amount of matching deals\n * @param deals\n * @returns {number}\n */\nconst getResultCategory = (deals) => {\n  if (deals.length > 0) {\n    return 0\n  }\n\n  return 1\n}\n\n/**\n * calculate user progress bar percent by the amount of matching deals\n * @param deals\n * @returns {number}\n */\nconst getResultPercent = (deals) => {\n  if (deals.length === 0) {\n    return 90\n  }\n  if (deals.length === 1) {\n    return 80\n  }\n  if (deals.length === 2) {\n    return 60\n  }\n\n  return 40\n}\n\nexport default {\n  get,\n  set,\n  init,\n  setResult,\n}\n","import store from './store.js'\nimport xmlParser from 'fast-xml-parser'\nimport fallbackData from '../data/communicationads.json'\n\n/**\n * request XML data from API and set tariffs in store\n * @returns {Promise}\n */\nconst getTariffs = () => {\n  return new Promise(function (resolve, reject) {\n    if (store.get().calculated) {\n      resolve()\n      return\n    }\n    requestXML()\n    setTimerToResolvePromise(resolve)\n  })\n}\n\n/**\n * use fallback data if needed and resolve promise after 3s\n * @param resolve\n */\nconst setTimerToResolvePromise = (resolve) => {\n  setTimeout(() => {\n    if (store.get().tariffs.length === 0) {\n      store.set({ tariffs: cleanData(fallbackData) })\n    }\n\n    resolve()\n  }, 3000)\n}\n\n/**\n * request XML data and convert it to JSON\n */\nconst requestXML = () => {\n  try {\n    const request = new XMLHttpRequest()\n\n    request.open('GET', store.get().endpoint, true)\n    request.timeout = 2500\n    request.onreadystatechange = () => {\n      if (request.readyState === 4 && request.status === 200 && request.response) {\n        const data = xmlParser.parse(request.response)\n        store.set({ tariffs: cleanData(data) })\n      }\n    }\n    request.send()\n  } catch (e) {}\n}\n\n/**\n * filter only needed keys from XML data\n * @param data\n * @returns {[]}\n */\nconst cleanData = (data) => {\n  let items = []\n\n  if (data && data.handytarif && typeof data.handytarif.product === 'object') {\n    data.handytarif.product.forEach((product) => {\n      items.push({\n        link: product.link, // string like 'http://www.commicationads.net/...'\n        product: product.product, // string like 'LTE Internet XL'\n        company: product.company, // string like 'PremiumSIM'\n        lte: product.mobileweb_lte === 'Ja' || false, // string like 'Ja'\n        productInfoUrl: product.url_moreinfo, // string like 'https://www.premiumsim.de/pdf/5158/produktioninformationsblatt'\n        flatrate: product.services_phone === 'Flat' || false, // string like 'Flat'\n        price: product.cost_pm.replace(',', '.'), // string like '21,99'\n        provider: product.provider.toLowerCase(), // string like 'Telefónica'\n        volume: product.mobileweb_volume.replace('GB', '').trim(), // string like '8 GB'\n      })\n    })\n  }\n\n  return items\n}\n\nexport default getTariffs\n","const observerIsSupported = function () {\n  return 'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype\n}\n\nexport default observerIsSupported\n","const getOffsets = function (offset) {\n  let offsets = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  }\n  if (!offset) {\n    return offsets\n  }\n  if (typeof offset === 'object') {\n    offsets.top = offset.top || 0\n    offsets.right = offset.right || 0\n    offsets.bottom = offset.bottom || 0\n    offsets.left = offset.left || 0\n  } else {\n    offsets.bottom = offset\n  }\n  return offsets\n}\n\nexport default getOffsets\n","import observerIsSupported from './helpers/support'\nimport getOffsets from './helpers/offset'\n\nconst initialize = function (target, once, inViewCallback, offset, outViewCallback) {\n  if (!inViewCallback && !outViewCallback) {\n    return\n  }\n  let observer\n  let boundingRect\n  let isUpdating = false\n  let isVisible = false\n  const offsets = getOffsets(offset)\n\n  const setOutView = function () {\n    if (outViewCallback && isVisible) {\n      try {\n        outViewCallback()\n      } catch (err) {\n        console.error(err)\n      }\n    }\n    isVisible = false\n  }\n\n  const setInView = function (entry) {\n    if (inViewCallback && !isVisible) {\n      try {\n        inViewCallback()\n      } catch (err) {\n        console.error(err)\n      }\n      if (once) {\n        removeObserver(entry)\n      }\n    }\n    isVisible = true\n  }\n\n  const removeObserver = function (entry) {\n    if (observerIsSupported()) {\n      observer.unobserve(entry.target)\n    } else {\n      window.removeEventListener('scroll', _scrollHandler, {capture: false, passive: true})\n    }\n  }\n\n  const _scrollUpdate = function () {\n    boundingRect = target.getBoundingClientRect()\n    var topBorderOfElementIsInViewport = boundingRect.top <= (window.innerHeight + offsets.bottom)\n    var bottomBorderOfElementIsInViewport = (boundingRect.bottom - offsets.bottom) >= 0\n    if (topBorderOfElementIsInViewport && bottomBorderOfElementIsInViewport) {\n      setInView()\n    } else {\n      setOutView()\n    }\n    isUpdating = false\n  }\n\n  const _scrollHandler = function () {\n    if (isUpdating) {\n      return false\n    }\n    if (window.requestAnimationFrame) {\n      window.requestAnimationFrame(_scrollUpdate)\n      isUpdating = true\n    } else {\n      _scrollUpdate()\n    }\n  }\n\n  if (observerIsSupported()) {\n    const config = {\n      rootMargin: offsets.top + 'px ' + offsets.right + 'px ' + offsets.bottom + 'px ' + offsets.left + 'px',\n    }\n    observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting) {\n          setInView(entry)\n        } else {\n          setOutView()\n        }\n      })\n    }, config)\n    observer.observe(target)\n  } else {\n    window.addEventListener('scroll', _scrollHandler, {capture: false, passive: true})\n  }\n}\n\nexport default initialize\n","/**\n * Add IntersectionObserver to observe elements entering and leaving the viewport\n * Fallback: scroll event with requestAnimationFrame\n * @param  {object} target         - Target node element to observe\n * @param  {boolean} once    - If true: set unobserve\n * @param  {function} inViewCallback  - Function to call target element enters viewport\n * @param  {integer} offset    - Offset to specify when to call callbacks\n * @param  {function} outViewCallback  - Function to call target element leaves viewport\n */\n\nimport initialize from './initialize.js'\n\nconst once = function (target, inViewCallback, offset, outViewCallback) {\n  initialize(target, true, inViewCallback, offset, outViewCallback)\n}\n\nconst repeat = function (target, inViewCallback, offset, outViewCallback) {\n  initialize(target, false, inViewCallback, offset, outViewCallback)\n}\n\nexport default {\n  once,\n  repeat,\n}\n","import store from '../store/store.js'\nimport Observer from 'smb-element-observer'\n\nlet formularInteractionTracked = false\nconst eventLabel = window.location.href\nconst eventCategory = 'Smartphone Rate Calculator'\n\n/**\n * track module embed event\n */\nexport const embed = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'embed',\n      eventLabel: eventLabel,\n      nonInteraction: true,\n      metric82: 1,\n    })\n  } catch (e) {}\n}\n\n/**\n * add event listerner to track module visible event\n */\nexport const listenToVisibleEvent = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  Observer.once(store.get().container, () => {\n    try {\n      window.smbt.emit('custom-event', {\n        hitType: 'event',\n        eventCategory: eventCategory,\n        eventAction: 'visible',\n        eventLabel: eventLabel,\n        nonInteraction: true,\n        metric83: 1,\n      })\n    } catch (e) {}\n  })\n}\n\n/**\n * track check button clicked\n */\nexport const checkButtonClick = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'Check button clicked',\n      eventLabel: eventLabel,\n      metric85: 1,\n    })\n  } catch (e) {}\n}\n\n/**\n * add event listerner to track formular value changed\n */\nexport const listenToFormularInputChanged = (formularItem) => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  formularItem.addEventListener('change', () => {\n    removeFormularInteractionListerner(formularItem)\n    trackFormularInputChanged()\n  })\n}\n\n/**\n * track formular interaction only once\n */\nconst trackFormularInputChanged = () => {\n  if (formularInteractionTracked) {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'clicked',\n      eventLabel: eventLabel,\n      metric84: 1,\n    })\n  } catch (e) {}\n\n  formularInteractionTracked = true\n}\n\n/**\n * remove event listerner for formular interaction\n * @param formularItem\n */\nconst removeFormularInteractionListerner = (formularItem) => {\n  formularItem.removeEventListener('change', () => {\n    removeFormularInteractionListerner(formularItem)\n    trackFormularInputChanged()\n  })\n}\n\n/**\n * add event listerner to track click event on affiliate links\n */\nexport const listenToAffiliateLinkClick = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  const links = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-affiliate-link\"]')\n  if (links.length === 0) {\n    return\n  }\n\n  links.forEach((link, index) => {\n    link.addEventListener('click', function () {\n      try {\n        window.smbt.emit('custom-event', {\n          hitType: 'event',\n          eventCategory: eventCategory,\n          eventAction: `Offer button ${index + 1} clicked`,\n          eventLabel: eventLabel,\n          metric86: 1,\n        })\n      } catch (e) {}\n    })\n  })\n}\n\n/**\n * track user result\n * @param categoryText\n */\nexport const result = (categoryText) => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: `Current contract ${categoryText}`,\n      eventLabel: eventLabel,\n    })\n  } catch (e) {}\n}\n\n/**\n * track email sended\n */\nexport const sendEmail = () => {\n  if (typeof window.smbt === 'undefined') {\n    return\n  }\n\n  try {\n    window.smbt.emit('custom-event', {\n      hitType: 'event',\n      eventCategory: eventCategory,\n      eventAction: 'Mail address added',\n      eventLabel: eventLabel,\n    })\n  } catch (e) {}\n}\n","import store from '../store/store.js'\nimport * as track from '../common/tracking.js'\n\n/**\n * render list of deals\n */\nconst renderDeals = () => {\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-deals\"]')\n\n  if (container === null) {\n    return\n  }\n\n  if (store.get().deals.length === 0) {\n    container.innerHTML = ``\n  } else {\n    container.innerHTML = `\n      <ul class=\"list-group smb-phone-plan-deals-list\">\n        ${store.get().deals.map((deal, index) => `\n          <li class=\"list-group-item smb-phone-plan-deal-item clearfix\">\n            <div class=\"col-sm-8\">\n              <h4 class=\"smb-phone-plan-deal-title\">${deal.title}</h4>\n              ${deal.productInfoUrl ? `\n                  <p><a href=\"${deal.productInfoUrl}\" target=\"_blank\">${deal.product}</a></p>\n                ` : `\n                  <p>${deal.product}</p>\n                `}\n            </div>\n            <div class=\"col-sm-4\">\n              <div class=\"text-center smb-phone-plan-deal-price\">${deal.price}€</div>\n              <a class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-affiliate-link\" href=\"${deal.link}\" target=\"_blank\">Zum Angebot</a>\n            </div>\n          </li>\n        `.trim()).join('')}\n      </ul>\n    `\n\n    track.listenToAffiliateLinkClick()\n  }\n}\n\nexport default renderDeals\n","import store from '../store/store.js'\nimport * as track from '../common/tracking.js'\nimport { validateEmail } from '../common/validation.js'\n\n/**\n * render user result\n */\nconst renderResult = () => {\n  const content = getContentByResult()\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-result\"]')\n\n  if (container) {\n    container.innerHTML = `\n      <hr />\n      <h3 class=\"\">Dein Ergebnis</h3>\n      <div class=\"smb-phone-plan-progress\">\n        <div class=\"smb-phone-plan-progress-bar ${content.progressClass}\" data-role=\"smb-phone-plan-progress-bar\"></div>\n        <i class=\"smb-phone-plan-thumb-icon ${content.thumbIconClass}\" data-role=\"smb-phone-plan-thumb-icon\"></i>\n      </div>\n      ${store.get().resultCategory === 0 ? `\n        <p><strong>Dein Tarif ist ${content.categoryText}. ${store.get().priceDiffence ? `Du zahlst ${store.get().priceDiffence.replace('.', ',')}€ zu viel im Monat.` : ``}</strong></p>\n        <p><strong>Hier gibt es bessere Alternativen:</strong></p>\n      ` : `\n        <strong>Herzlichen Glückwünsch, du hast einen tollen Tarif!</strong>\n        ${store.get().emailSended === false ? `\n          <hr />\n          <div data-role=\"smb-phone-plan-email\">\n            <p>Informiere mich per E-Mail, wenn es ein besseres Angebot gibt!</p>\n            <div class=\"row\">\n              <div class=\"form-group col-sm-6\">\n                <input type=\"email\" class=\"form-control\" data-role=\"smb-phone-plan-email-input\" placeholder=\"E-Mail-Adresse\">\n              </div>\n              <div class=\"form-group col-sm-6\">\n                <button class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-send-email\">Absenden</button>\n              </div>\n            </div>\n          </div>\n        ` : ``}\n      `}\n    `\n\n    setProgressBarTransition(store.get().resultPercent)\n    setThumbIconShake()\n    listenToSendEmailClick()\n    track.result(content.categoryText)\n  }\n}\n\n/**\n * return result content by user's result category\n * @returns {{progressClass: string, categoryText: string}}\n */\nconst getContentByResult = () => {\n  let content = {\n    categoryText: 'schlecht',\n    thumbIconClass: 'icon-thumbs-down',\n    progressClass: 'smb-phone-plan-danger',\n  }\n\n  if (store.get().resultCategory === 1) {\n    content.categoryText = 'gut'\n    content.thumbIconClass = 'icon-thumbs-up'\n    content.progressClass = 'smb-phone-plan-success'\n  }\n\n  return content\n}\n\n/**\n * workaround to animate progress bar\n * @param progressWidth\n */\nconst setProgressBarTransition = (progressWidth) => {\n  const progressBar = store.get().container.querySelector('[data-role=\"smb-phone-plan-progress-bar\"]')\n\n  if (progressBar === null) {\n    return\n  }\n\n  setTimeout(() => {\n    progressBar.style.width = `${progressWidth}%`\n  }, 100)\n}\n\n/**\n * add shake class to thumb icon\n */\nconst setThumbIconShake = () => {\n  const thumbIcon = store.get().container.querySelector('[data-role=\"smb-phone-plan-thumb-icon\"]')\n\n  if (thumbIcon === null) {\n    return\n  }\n\n  setTimeout(() => {\n    thumbIcon.classList.add('shake')\n  }, 1000)\n}\n\n/**\n * event listerner for send email button\n */\nconst listenToSendEmailClick = () => {\n  const sendButton = store.get().container.querySelector('[data-role=\"smb-phone-plan-send-email\"]')\n\n  if (sendButton === null) {\n    return\n  }\n\n  sendButton.addEventListener('click', () => {\n    const emailForm = store.get().container.querySelector('[data-role=\"smb-phone-plan-email\"]')\n    const email = store.get().container.querySelector('[data-role=\"smb-phone-plan-email-input\"]')\n\n    if (emailForm === null || email === null) {\n      return\n    }\n\n    if (validateEmail(email.value) === false) {\n      email.parentElement.classList.add('has-error')\n      return\n    }\n\n    emailForm.innerHTML = `<p>Vielen Dank! Du erhältst von uns eine E-Mail, sobald wir ein Angebot mit den gleichen Konditionen zu einem besseren Preis finden. Bis dahin kannst du entspannt deinen Tarif weiternutzen.</p>`\n    store.set({ emailSended: true })\n    track.sendEmail()\n  })\n}\n\nexport default renderResult\n","import store from '../store/store.js'\n\n/**\n * validate formular and return input values\n * @returns {{}}\n */\nexport const validateFormularData = () => {\n  let error = false\n  let formularData = {}\n  const formularItems = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-formular-item\"]')\n\n  for (let i = 0; i < formularItems.length; i++) {\n    const formularItem = formularItems[i]\n    const name = formularItem.dataset.name\n    const required = formularItem.dataset.required\n\n    if (required && formularItem.value === '') {\n      error = true\n      formularItem.parentElement.classList.add('has-error')\n    } else {\n      formularItem.parentElement.classList.remove('has-error')\n    }\n\n    if (formularItem.type === 'checkbox') {\n      formularData[name] = formularItem.checked\n    } else {\n      formularData[name] = formularItem.value\n    }\n  }\n\n  if (error) {\n    return {}\n  }\n\n  return formularData\n}\n\n/**\n * validate email input\n * @param email\n * @returns {boolean}\n */\nexport const validateEmail = (email) => {\n  const regex = /\\S+@\\S+\\.\\S+/\n  return regex.test(email)\n}\n","import store from '../store/store.js'\n\n/**\n * return random facts\n * @returns {string}\n */\nconst getRandomFacts = () => {\n  const facts = [\n    '57 Millionen Deutsche besitzen ein Smartphone. (Quelle: statista)',\n    '43% der 20 bis 29-Jährigen in Deutschland nutzen ihr Smartphone mehr als 120 Minuten täglich. (Quelle: statista)',\n    'Die Netzabdeckung mit 4G liegt in Deutschland bei 65%, in Norwegen bei 92%. (Quelle: statista)',\n  ]\n\n  return facts[Math.floor(Math.random() * facts.length)]\n}\n\n/**\n * render processing with a random fact\n */\nexport const renderProcessing = () => {\n  const container = store.get().container.querySelector('[data-role=\"smb-phone-plan-processing\"]')\n\n  if (container) {\n    container.innerHTML = `\n      <hr />\n      <div class=\"smb-phone-plan-loading-dot-container text-center\">\n        <p>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n          <span class=\"smb-phone-plan-loading-dot\"></span>\n        </p>\n      </div>\n      <p class=\"text-center\">${getRandomFacts()}</p>\n    `\n  }\n}\n\n/**\n * remove processing\n */\nexport const removeProcessing = () => {\n  const processing = store.get().container.querySelector('[data-role=\"smb-phone-plan-processing\"]')\n\n  if (processing) {\n    processing.remove()\n  }\n}\n","import '../stylesheets/imports.scss'\nimport store from './store/store.js'\nimport getTariffs from './store/tariffs.js'\nimport renderDeals from './render/deals.js'\nimport renderResult from './render/result.js'\nimport * as track from './common/tracking.js'\nimport { validateFormularData } from './common/validation.js'\nimport { renderProcessing, removeProcessing } from './render/processing.js'\nimport { renderStage, blurFormular, unBlurFormular } from './render/stage.js'\n\nif (process.env.NODE_ENV === 'development') {\n  import('../stylesheets/demo.scss')\n}\n\n/**\n * init function to init store, render stage, add event listerners and tracking\n * @param options\n */\nconst init = (options) => {\n  store.init(options)\n\n  if (store.get().container === null) {\n    return\n  }\n\n  renderStage()\n  listenToCheckClick()\n  listenToEnterClick()\n  listenToFormularInteraction()\n  track.embed()\n  track.listenToVisibleEvent()\n}\n\n/**\n * event listerner for check button\n */\nconst listenToCheckClick = () => {\n  const checkButton = store.get().container.querySelector('[data-role=\"smb-phone-plan-check\"]')\n\n  if (checkButton === null) {\n    return\n  }\n\n  checkButton.addEventListener('click', () => {\n    calculateUserTarif()\n  })\n}\n\n/**\n * event listerner for enter button\n */\nconst listenToEnterClick = () => {\n  document.onkeydown = (e) => {\n    if (e.keyCode === 13) {\n      calculateUserTarif()\n    }\n  }\n}\n\n/**\n * calculate user input and render result\n */\nconst calculateUserTarif = () => {\n  const formularData = validateFormularData()\n\n  track.checkButtonClick()\n  if (Object.keys(formularData).length === 0) {\n    return\n  }\n\n  renderProcessing()\n  blurFormular()\n  getTariffs().then(() => {\n    store.setResult(formularData)\n  }).then(() => {\n    removeProcessing()\n    renderResult()\n    renderDeals()\n  })\n}\n\n/**\n * add event listerner to track formular interaction.\n */\nexport const listenToFormularInteraction = () => {\n  const formularItems = store.get().container.querySelectorAll('[data-role=\"smb-phone-plan-formular-item\"]')\n\n  for (let i = 0; i < formularItems.length; i++) {\n    const formularItem = formularItems[i]\n\n    listenToFormularFocussed(formularItem)\n    track.listenToFormularInputChanged(formularItem)\n  }\n}\n\n/**\n * unblur formular if one of the inputs are focussed and formular is already blur\n * @param formularItem\n */\nconst listenToFormularFocussed = (formularItem) => {\n  formularItem.addEventListener('focus', () => {\n    if (store.get().calculated) {\n      unBlurFormular()\n    }\n  })\n}\n\nexport default init\n","import store from '../store/store.js'\n\n/**\n * render phone plan stage, initially with formular and placeholder for next steps\n */\nexport const renderStage = () => {\n  store.get().container.innerHTML = `\n    <div class=\"smb-phone-plan-container\">\n      <div class=\"smb-phone-plan-header\">\n        <h2 class=\"smb-phone-plan-title\">Wie gut ist dein Handyvertrag?</h2>\n        ${store.get().logo ? `\n          <img class=\"smb-phone-plan-logo\" src=\"${store.get().logo}\" alt=\"\">\n        ` : ``}\n      </div>\n      <div class=\"smb-phone-plan-body\">\n        <div class=\"smb-phone-plan-formular\" data-role=\"smb-phone-plan-formular\">\n          <div class=\"form-group input-group\">\n            <input type=\"number\" class=\"form-control\" placeholder=\"Wieviel zahlst du pro Monat?\" value=\"\" data-role=\"smb-phone-plan-formular-item\" data-name=\"price\" data-required=\"1\">\n            <div class=\"input-group-addon\">€</div>\n          </div>\n          <div class=\"row\">\n            <div class=\"form-group col-sm-6\">\n              <select class=\"form-control\" data-role=\"smb-phone-plan-formular-item\" data-name=\"provider\" data-required=\"1\">\n                <option value=\"\">Netz</option>\n                <option value=\"d1\">Telekom (D1)</option>\n                <option value=\"d2\">Vodafon (D2)</option>\n                <option value=\"telefónica\">Telefónica (O2)</option>\n              </select>\n            </div>\n            <div class=\"form-group col-sm-6\">\n              <select class=\"form-control\" data-role=\"smb-phone-plan-formular-item\" data-name=\"volume\" data-required=\"1\">\n                <option value=\"\">Datenvolumen</option>\n                <option value=\"0.5\">unter 1GB</option>\n                <option value=\"1\">1GB</option>\n                <option value=\"2\">2GB</option>\n                <option value=\"3\">3GB</option>\n                <option value=\"4\">4GB</option>\n                <option value=\"5\">5GB</option>\n                <option value=\"6\">6GB</option>\n                <option value=\"8\">8GB</option>\n                <option value=\"10\">10GB</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"row form-group clearfix\">\n            <div class=\"col-sm-6\">\n              <label class=\"custom-control-label\">\n                <input type=\"checkbox\" class=\"custom-control-input\" data-role=\"smb-phone-plan-formular-item\" data-name=\"lte\">\n                &nbsp;LTE\n              </label>\n            </div>\n            <div class=\"col-sm-6\">\n              <label class=\"custom-control-label\">\n                <input type=\"checkbox\" class=\"custom-control-input\" data-role=\"smb-phone-plan-formular-item\" data-name=\"flatrate\">\n                &nbsp;Telefon-Flatrate\n              </label>\n            </div>\n          </div>\n          <button class=\"btn btn-primary btn-block\" data-role=\"smb-phone-plan-check\">Jetzt prüfen!</button>\n        </div>\n        <div class=\"smb-phone-plan-processing\" data-role=\"smb-phone-plan-processing\"></div>\n        <div class=\"smb-phone-plan-result\" data-role=\"smb-phone-plan-result\"></div>\n        <div class=\"smb-phone-plan-deals\" data-role=\"smb-phone-plan-deals\"></div>\n      </div>\n    </div>\n  `\n}\n\n/**\n * remove blur class of formular\n */\nexport const unBlurFormular = () => {\n  const formular = store.get().container.querySelector('[data-role=\"smb-phone-plan-formular\"]')\n\n  if (formular === null) {\n    return\n  }\n\n  formular.classList.remove('blur')\n}\n\n/**\n * add blur class to formular\n */\nexport const blurFormular = () => {\n  const formular = store.get().container.querySelector('[data-role=\"smb-phone-plan-formular\"]')\n\n  if (formular === null) {\n    return\n  }\n\n  formular.classList.add('blur')\n}\n"],"sourceRoot":""}